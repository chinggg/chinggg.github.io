<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全 on chinggg的博客</title><link>https://chinggg.github.io/tags/%E5%AE%89%E5%85%A8/</link><description>Recent content in 安全 on chinggg的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 14 Sep 2022 12:20:48 +0800</lastBuildDate><atom:link href="https://chinggg.github.io/tags/%E5%AE%89%E5%85%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>用合成 bug 评估KLEE：Characterizing and Improving Bug-Finders with Synthetic Bugs</title><link>https://chinggg.github.io/post/evalklee-saner22/</link><pubDate>Wed, 14 Sep 2022 12:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/evalklee-saner22/</guid><description>KLEE 是知名的符号执行引擎，甚至还有专门的学术会议，第三届 KLEE Workshop 于本月 15-16 日在伦敦召开，大家也可以选择线上免费参会。今天分享的这篇名为 Characterizing and Improving Bug-Finders with Synthetic Bugs</description></item><item><title>LibAFL：构建模块化可复用 fuzzer 的框架</title><link>https://chinggg.github.io/post/libafl/</link><pubDate>Wed, 24 Aug 2022 20:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/libafl/</guid><description>如今系统安全方向的论文在代码开源上已经展开了激烈的军备竞赛，一篇文章动辄成千上万行的代码量，今天我们推荐的这篇 LibAFL 则更胜一筹，先有开源工具再顺</description></item><item><title>FixReverter：为 fuzz benchmark 插入真实 bug 的方法</title><link>https://chinggg.github.io/post/fixreverter/</link><pubDate>Wed, 17 Aug 2022 12:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/fixreverter/</guid><description>要实现一个 fuzzing benchmark，必不可少的一步是制作 bug 数据集，以往的工作要么耗费人力使用真实 CVE，要么牺牲现实性自动插入人工合成的 bug，</description></item><item><title>Magma: A Ground-Truth Fuzzing Benchmark</title><link>https://chinggg.github.io/post/magma/</link><pubDate>Fri, 05 Aug 2022 15:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/magma/</guid><description>之前我们分享过 ISSTA 2022 中一篇对静态分析检测漏洞效果进行评估的文章，与其他使用 LAVA-M 合成数据集的工作不同，它的数据集主要基于 Magma，包含了一百多个</description></item><item><title>静态分析检测漏洞真的有效吗：An Empirical Study on the Effectiveness of Static C Code Analyzers for Vulnerability Detection</title><link>https://chinggg.github.io/post/sca-vuln-detect/</link><pubDate>Tue, 26 Jul 2022 15:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/sca-vuln-detect/</guid><description>今天给大家推荐的是来自 ISSTA 2022 的一篇论文 An Empirical Study on the Effectiveness of Static C Code Analyzers for Vulnerability Detection，作者是慕尼黑工业大学的 Stephan Lipp, Sebastian Banescu 和 Alexander Pretschner，作</description></item><item><title>智能模糊测试技术综述</title><link>https://chinggg.github.io/post/fuzzsurvey/</link><pubDate>Fri, 10 Jun 2022 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/fuzzsurvey/</guid><description>忽略标题中的智能 解释模糊测试技术：背景、定义、技术原理、意义、当前国内外热点研究方向； 模糊测试技术（Fuzzing）是一种流行的软件测试技术</description></item><item><title>sFuzz: 高效自适应的智能合约 fuzz</title><link>https://chinggg.github.io/post/sfuzz/</link><pubDate>Thu, 07 Apr 2022 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/sfuzz/</guid><description>前言 本文将对 ICSE 2020 会议论文 sFuzz: An Efficient Adaptive Fuzzer for Solidity Smart Contracts 进行解读。这篇论文的主要研究内容是综合运用 AFL 的策略和自适应方法来 fuzz 智能合约，并开发为一整套工具，其</description></item><item><title>FuzzBuilder: 为 C/C++ library 自动构建灰盒模糊测试环境</title><link>https://chinggg.github.io/post/fuzzbuilder/</link><pubDate>Mon, 14 Mar 2022 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/fuzzbuilder/</guid><description>本文将对 ACSAC 2019 会议论文 FuzzBuilder: Automated building greybox fuzzing environment for C/C++ library 进行解读。这篇论文的主要亮点是利用单元测试为没有可执行文件的库自动生成 Fuzz 环境，通过修改 LLVM IR 以收集 seeds 并生</description></item><item><title>End-to-End Captcha Recognition With Few Labels: From SimGAN to Transfer Learning</title><link>https://chinggg.github.io/post/captcha-ml/</link><pubDate>Sat, 05 Mar 2022 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/captcha-ml/</guid><description>基本信息 摘要：验证码是保护网站免受恶意攻击的一种常见机制，其中基于文本的验证码使用最为广泛。虽然机器学习技术已对其安全造成威胁，但现有的大多</description></item><item><title>RAZOR: Software Debloating</title><link>https://chinggg.github.io/post/razor/</link><pubDate>Tue, 08 Feb 2022 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/razor/</guid><description>RAZOR: software debloating 论文信息 原文作者：Chenxiong Qian, Hong Hu, Mansour Alharthi, Pak Ho Chung, Taesoo Kim, and Wenke Lee, Georgia Institute of Technology 原文标题：RAZOR: A Framework for Post-deployment Software Debloating 发表会议：USENIX SECURITY &amp;lsquo;19 原文</description></item><item><title>Local Differential Privacy for IoV</title><link>https://chinggg.github.io/post/ldp-iov/</link><pubDate>Thu, 13 Jan 2022 21:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/ldp-iov/</guid><description>A survey of local differential privacy for securing internet of vehicles Intro IoV facilitates human’s life but benefits come with huge price of data privacy. In academia, differential privacy (DP) is proposed and regarded as an extremely strong privacy standard, which formalizes both the degree of privacy preservation and data utility. But DP suffers from a drawback in many practical scenarios because the paradigm</description></item><item><title>Secret Leakage in Public GitHub Repositories</title><link>https://chinggg.github.io/post/git-leaks/</link><pubDate>Wed, 09 Jun 2021 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/git-leaks/</guid><description>基本信息 摘要: GitHub 等平台使得软件协同开发的公开进行成为常态，但当公开的代码中涉及到密钥管理时，问题也随之而来，开发过程中将 API Key 或私钥添加进代码</description></item><item><title>ML-Leaks: 针对机器学习模型的成员推理攻击</title><link>https://chinggg.github.io/post/ml-leaks/</link><pubDate>Sat, 22 May 2021 13:46:52 +0000</pubDate><guid>https://chinggg.github.io/post/ml-leaks/</guid><description>前言 本文将对 NDSS (Network and Distributed System Security Symposium) 2019 获奖论文 ML-Leaks: Model and Data Independent Membership Inference Attacks and Defenses on Machine Learning Models 进行解读。这篇论文的主要研究内容是针对机器学习模型的成员推理攻击（membe</description></item></channel></rss>