<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>学术 on chinggg的博客</title><link>https://chinggg.github.io/tags/%E5%AD%A6%E6%9C%AF/</link><description>Recent content in 学术 on chinggg的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 26 Sep 2022 12:20:48 +0800</lastBuildDate><atom:link href="https://chinggg.github.io/tags/%E5%AD%A6%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>Evocatio: Conjuring Bug Capabilities from a Single PoC</title><link>https://chinggg.github.io/post/evocatio/</link><pubDate>Mon, 26 Sep 2022 12:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/evocatio/</guid><description>Fuzzing 等动态软件测试技术可以快速生成 PoC 测试用例来触发程序中的 bug，但当开发者获得了大量的 PoC 后，又该如何在人力有限的情况下快速地分析 bug 的严重性和</description></item><item><title>用合成 bug 评估KLEE：Characterizing and Improving Bug-Finders with Synthetic Bugs</title><link>https://chinggg.github.io/post/evalklee-saner22/</link><pubDate>Wed, 14 Sep 2022 12:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/evalklee-saner22/</guid><description>KLEE 是知名的符号执行引擎，甚至还有专门的学术会议，第三届 KLEE Workshop 于本月 15-16 日在伦敦召开，大家也可以选择线上免费参会。今天分享的这篇名为 Characterizing and Improving Bug-Finders with Synthetic Bugs</description></item><item><title>LibAFL：构建模块化可复用 fuzzer 的框架</title><link>https://chinggg.github.io/post/libafl/</link><pubDate>Wed, 24 Aug 2022 20:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/libafl/</guid><description>如今系统安全方向的论文在代码开源上已经展开了激烈的军备竞赛，一篇文章动辄成千上万行的代码量，今天我们推荐的这篇 LibAFL 则更胜一筹，先有开源工具再顺</description></item><item><title>FixReverter：为 fuzz benchmark 插入真实 bug 的方法</title><link>https://chinggg.github.io/post/fixreverter/</link><pubDate>Wed, 17 Aug 2022 12:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/fixreverter/</guid><description>要实现一个 fuzzing benchmark，必不可少的一步是制作 bug 数据集，以往的工作要么耗费人力使用真实 CVE，要么牺牲现实性自动插入人工合成的 bug，</description></item><item><title>Magma: A Ground-Truth Fuzzing Benchmark</title><link>https://chinggg.github.io/post/magma/</link><pubDate>Fri, 05 Aug 2022 15:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/magma/</guid><description>之前我们分享过 ISSTA 2022 中一篇对静态分析检测漏洞效果进行评估的文章，与其他使用 LAVA-M 合成数据集的工作不同，它的数据集主要基于 Magma，包含了一百多个</description></item><item><title>静态分析检测漏洞真的有效吗：An Empirical Study on the Effectiveness of Static C Code Analyzers for Vulnerability Detection</title><link>https://chinggg.github.io/post/sca-vuln-detect/</link><pubDate>Tue, 26 Jul 2022 15:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/sca-vuln-detect/</guid><description>今天给大家推荐的是来自 ISSTA 2022 的一篇论文 An Empirical Study on the Effectiveness of Static C Code Analyzers for Vulnerability Detection，作者是慕尼黑工业大学的 Stephan Lipp, Sebastian Banescu 和 Alexander Pretschner，作</description></item><item><title>ISSTA 2022 学生志愿者云参会小记</title><link>https://chinggg.github.io/post/issta2022/</link><pubDate>Fri, 22 Jul 2022 17:20:48 +0800</pubDate><guid>https://chinggg.github.io/post/issta2022/</guid><description>ISSTA (The International Symposium on Software Testing and Analysis) 是软件测试与分析方面最著名的国际会议之一，也是中国计算机学会推荐的A类国际学术会议（CCF-A）。由于疫情原因，原本计划在</description></item></channel></rss>